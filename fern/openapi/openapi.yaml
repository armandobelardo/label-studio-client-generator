openapi: 3.0.0
x-origin:
  - url: https://app.heartex.com/docs/api?format=openapi
    format: swagger
    version: "2.0"
    converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.8
info:
  title: Label Studio API
  contact:
    url: https://labelstud.io
  x-logo:
    url: ../../static/icons/logo-black.svg
  version: v2.12.1.dev6
security:
  - Token: []
paths:
  /api/annotation-history/:
    get:
      operationId: api_annotation-history_list
      summary: List all annotation history items for annotation
      description: "List annotation history items for an annotation. Annotation
        history logs all actions performed with annotations, such as: imports,
        submits, updates, reviews, and more. Users can view annotation history
        items in the Annotation History panel during labeling."
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: annotation
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnotationHistory"
      tags:
        - Annotation History
    delete:
      operationId: api_annotation-history_delete
      summary: Delete annotation history items
      description: Delete all annotation history items for a specific annotation, task
        or project. This method is available only for users with administrator
        roles.
      parameters:
        - name: annotation
          in: query
          required: false
          schema:
            type: integer
        - name: task
          in: query
          required: false
          schema:
            type: integer
        - name: project
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Returns a dict containing the count of removed items.
          title: Success
      tags:
        - Annotation History
    parameters: []
  /api/annotation-reviews/:
    get:
      operationId: api_annotation-reviews_list
      summary: List reviews
      description: List all reviews for a specific annotation ID.
      parameters:
        - name: annotation
          in: query
          description: annotation
          required: false
          schema:
            type: string
        - name: annotation__task__project
          in: query
          description: annotation__task__project
          required: false
          schema:
            type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnotationReview"
      tags:
        - Annotation Reviews
    post:
      operationId: api_annotation-reviews_create
      summary: Create review
      description: Create a review for a specific annotation ID.
      requestBody:
        $ref: "#/components/requestBodies/AnnotationReview"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationReview"
      tags:
        - Annotation Reviews
    parameters: []
  "/api/annotation-reviews/{id}/":
    get:
      operationId: api_annotation-reviews_read
      summary: Get review
      description: Retrieve a specific review by ID for an annotation.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationReview"
      tags:
        - Annotation Reviews
    put:
      operationId: api_annotation-reviews_update
      summary: Put review
      description: Overwrite a specific review by ID.
      requestBody:
        $ref: "#/components/requestBodies/AnnotationReview"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationReview"
      tags:
        - Annotation Reviews
    patch:
      operationId: api_annotation-reviews_partial_update
      summary: Update review
      description: Update a specific review by ID.
      requestBody:
        $ref: "#/components/requestBodies/AnnotationReview"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationReview"
      tags:
        - Annotation Reviews
    delete:
      operationId: api_annotation-reviews_delete
      summary: Delete review
      description: Delete a review by ID
      responses:
        "204":
          description: ""
      tags:
        - Annotation Reviews
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this annotation review.
        required: true
        schema:
          type: integer
  "/api/annotations/{id}/":
    get:
      operationId: api_annotations_read
      summary: Get annotation by its ID
      description: Retrieve a specific annotation for a task using the annotation result ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
      tags:
        - Annotations
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: get
    patch:
      operationId: api_annotations_partial_update
      summary: Update annotation
      description: Update existing attributes on an annotation.
      requestBody:
        $ref: "#/components/requestBodies/Annotation"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
      tags:
        - Annotations
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: update
    delete:
      operationId: api_annotations_delete
      summary: Delete annotation
      description: Delete an annotation. This action can't be undone!
      responses:
        "204":
          description: ""
      tags:
        - Annotations
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: delete
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this annotation.
        required: true
        schema:
          type: integer
  /api/comments/:
    get:
      operationId: api_comments_list
      summary: List comments
      description: List all comments for a specific annotation ID.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
      tags:
        - Comments
    post:
      operationId: api_comments_create
      summary: Create comment
      description: Create a comment for a specific annotation ID.
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
      tags:
        - Comments
    parameters: []
  "/api/comments/{id}/":
    get:
      operationId: api_comments_read
      summary: Get comment
      description: Retrieve a specific comment by ID for an annotation.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
      tags:
        - Comments
    put:
      operationId: api_comments_update
      summary: Put comment
      description: Overwrite a specific comment by ID.
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
      tags:
        - Comments
    patch:
      operationId: api_comments_partial_update
      summary: Update comment
      description: Update a specific comment by ID.
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
      tags:
        - Comments
    delete:
      operationId: api_comments_delete
      summary: Delete comment
      description: Delete a comment by ID
      responses:
        "204":
          description: ""
      tags:
        - Comments
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/current-user/reset-token/:
    post:
      operationId: api_current-user_reset-token_create
      summary: Reset user token
      description: Reset the user token for the current user.
      responses:
        "201":
          description: User token response
          content:
            application/json:
              schema:
                description: User token
                type: object
                properties:
                  token:
                    description: Token
                    type: string
      tags:
        - Users
    parameters: []
  /api/current-user/token:
    get:
      operationId: api_current-user_token_list
      summary: Get user token
      description: Get a user token to authenticate to the API as the current user.
      responses:
        "200":
          description: User token response
          content:
            application/json:
              schema:
                description: User token
                type: object
                properties:
                  detail:
                    description: Token
                    type: string
      tags:
        - Users
    parameters: []
  /api/current-user/whoami:
    get:
      operationId: api_current-user_whoami_read
      summary: Retrieve my user
      description: Retrieve details of the account that you are using to access the API.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseUser"
      tags:
        - Users
    parameters: []
  /api/dataset-storages/:
    get:
      operationId: api_dataset-storages_list
      summary: List all dataset storages from the project
      description: Retrieve a list of the dataset storages of all types with their IDs.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: path
          description: A unique integer value identifying your project.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of DatasetStorageSerializer
      tags:
        - Storage
    parameters: []
  /api/dataset-storages/azure/:
    get:
      operationId: api_dataset-storages_azure_list
      summary: Get all import storage
      description: Get a list of all Azure import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Dataset Storage: Azure"
    post:
      operationId: api_dataset-storages_azure_create
      summary: Create import storage
      description: Create a new Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Dataset Storage: Azure"
    parameters: []
  /api/dataset-storages/azure/check-for-records/:
    post:
      operationId: api_dataset-storages_azure_check-for-records_create
      summary: Check for records given the file pattern
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      requestBody:
        $ref: "#/components/requestBodies/AzureDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Dataset Storage: Azure"
    parameters: []
  /api/dataset-storages/azure/validate/:
    post:
      operationId: api_dataset-storages_azure_validate_create
      summary: Validate import storage
      description: Validate a specific Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Storage: Azure"
    parameters: []
  "/api/dataset-storages/azure/{id}/":
    get:
      operationId: api_dataset-storages_azure_read
      summary: Get import storage
      description: Get a specific Azure import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Storage: Azure"
    patch:
      operationId: api_dataset-storages_azure_partial_update
      summary: Update import storage
      description: Update a specific Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureDatasetStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Storage: Azure"
    delete:
      operationId: api_dataset-storages_azure_delete
      summary: Delete import storage
      description: Delete a specific Azure import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/azure/{id}/columns/":
    get:
      operationId: api_dataset-storages_azure_columns_list
      summary: Get data column names from storage
      description: Retrieves column names from users JSON/blob data in bucket
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - "Dataset Storage: Azure"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/azure/{id}/sync/":
    post:
      operationId: api_dataset-storages_azure_sync_create
      summary: Sync import storage
      description: Sync tasks from an Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureDatasetStorage"
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/dataset-storages/gcs/:
    get:
      operationId: api_dataset-storages_gcs_list
      summary: Get all import storage
      description: Get a list of all GCS import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Dataset Storage: GCS"
    post:
      operationId: api_dataset-storages_gcs_create
      summary: Create import storage
      description: Create a new GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Dataset Storage: GCS"
    parameters: []
  /api/dataset-storages/gcs/check-for-records/:
    post:
      operationId: api_dataset-storages_gcs_check-for-records_create
      summary: Check for records given the file pattern
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      requestBody:
        $ref: "#/components/requestBodies/GCSDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Dataset Storage: GCS"
    parameters: []
  /api/dataset-storages/gcs/validate/:
    post:
      operationId: api_dataset-storages_gcs_validate_create
      summary: Validate import storage
      description: Validate a specific GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Storage: GCS"
    parameters: []
  "/api/dataset-storages/gcs/{id}/":
    get:
      operationId: api_dataset-storages_gcs_read
      summary: Get import storage
      description: Get a specific GCS import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Storage: GCS"
    patch:
      operationId: api_dataset-storages_gcs_partial_update
      summary: Update import storage
      description: Update a specific GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSDatasetStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Storage: GCS"
    delete:
      operationId: api_dataset-storages_gcs_delete
      summary: Delete import storage
      description: Delete a specific GCS import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/gcs/{id}/columns/":
    get:
      operationId: api_dataset-storages_gcs_columns_list
      summary: Get data column names from storage
      description: Retrieves column names from users JSON/blob data in bucket
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - "Dataset Storage: GCS"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/gcs/{id}/sync/":
    post:
      operationId: api_dataset-storages_gcs_sync_create
      summary: Sync import storage
      description: Sync tasks from an GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSDatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSDatasetStorage"
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/dataset-storages/s3/:
    get:
      operationId: api_dataset-storages_s3_list
      summary: Get all import storage
      description: Get a list of all S3 import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - "Dataset Storage: S3"
    post:
      operationId: api_dataset-storages_s3_create
      summary: Create import storage
      description: Create a new S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3DatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - "Dataset Storage: S3"
    parameters: []
  /api/dataset-storages/s3/check-for-records/:
    post:
      operationId: api_dataset-storages_s3_check-for-records_create
      summary: Check for records given the file pattern
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      requestBody:
        $ref: "#/components/requestBodies/S3DatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - "Dataset Storage: S3"
    parameters: []
  /api/dataset-storages/s3/validate/:
    post:
      operationId: api_dataset-storages_s3_validate_create
      summary: Validate import storage
      description: Validate a specific S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3DatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - Storage:S3
    parameters: []
  "/api/dataset-storages/s3/{id}/":
    get:
      operationId: api_dataset-storages_s3_read
      summary: Get import storage
      description: Get a specific S3 import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - Storage:S3
    patch:
      operationId: api_dataset-storages_s3_partial_update
      summary: Update import storage
      description: Update a specific S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3DatasetStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - Storage:S3
    delete:
      operationId: api_dataset-storages_s3_delete
      summary: Delete import storage
      description: Delete a specific S3 import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/s3/{id}/columns/":
    get:
      operationId: api_dataset-storages_s3_columns_list
      summary: Get data column names from storage
      description: Retrieves column names from users JSON/blob data in bucket
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - "Dataset Storage: S3"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 dataset storage.
        required: true
        schema:
          type: integer
  "/api/dataset-storages/s3/{id}/sync/":
    post:
      operationId: api_dataset-storages_s3_sync_create
      summary: Sync import storage
      description: Sync tasks from an S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3DatasetStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3DatasetStorage"
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/dataset-storages/types/:
    get:
      operationId: api_dataset-storages_types_list
      summary: List all dataset storages types
      description: Retrieve a list of the dataset storages types.
      responses:
        "200":
          description: "A list of dataset storages types {'name': name, 'title': title}."
      tags:
        - Storage
    parameters: []
  /api/datasets/:
    get:
      operationId: api_datasets_list
      summary: List datasets
      description: List all datasets.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dataset"
      tags:
        - Datasets
    post:
      operationId: api_datasets_create
      summary: Create dataset
      description: Create a new dataset.
      requestBody:
        $ref: "#/components/requestBodies/Dataset"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
      tags:
        - Datasets
    parameters: []
  /api/datasets/columns:
    get:
      operationId: api_datasets_columns_read
      summary: Get data explorer columns
      description: Retrieve the data explorer columns available for a specific Dataset.
      parameters:
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags:
        - Data Explorer
    parameters: []
  /api/datasets/import:
    post:
      operationId: api_datasets_import_create
      summary: Export candidate tasks to project
      description: |
        
        Export Candidate task for a specific dataset to project.
      parameters:
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
        - name: included
          in: query
          description: Candidate tasks IDs from vectordb database
          schema:
            type: object
        - name: excluded
          in: query
          description: Candidate tasks IDs to exclude from export
          schema:
            type: object
        - name: view
          in: query
          description: View ID
          schema:
            type: integer
        - name: additional_filters
          in: query
          description: Additional filters like page and page_size to limit export
          schema:
            type: object
      responses:
        "201":
          description: ""
      tags:
        - Data Explorer
    patch:
      operationId: api_datasets_import_partial_update
      summary: Export candidate tasks to project
      description: Export Candidate task for a specific dataset to project.
      parameters:
        - name: job_id
          in: query
          description: Job ID to start or cancel
          schema:
            type: integer
        - name: signal
          in: query
          description: "Signal type: start or cancel"
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - Datasets
    parameters: []
  /api/datasets/tasks:
    get:
      operationId: api_datasets_tasks_read
      summary: Get Data Explorer tasks list
      description: >
        
        Retrieve a list of Data Explorer tasks with pagination for a specific view or dataset, by using filters and ordering.
      parameters:
        - name: view
          in: query
          description: View ID
          schema:
            type: integer
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
        - name: page
          in: query
          description: Page number in request
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of tasks to return in response
          schema:
            type: integer
        - name: min_threshold
          in: query
          description: Minimum threshold for candidate score
          schema:
            type: number
        - name: max_threshold
          in: query
          description: Maximum threshold for candidate score
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetView"
      tags:
        - Data Explorer
    parameters: []
  /api/datasets/tasks/metadata:
    get:
      operationId: api_datasets_tasks_metadata_read
      summary: Get Candidate task metadata
      description: >
        
        Retrieve Candidate task metadata for a specific dataset, by using candidate_task_id or weaviate_id.
      parameters:
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
        - name: candidate_task_id
          in: query
          description: Candidate task path in the bucket
          schema:
            type: string
        - name: vectordb_id
          in: query
          description: Task ID from vectordb database
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - Data Explorer
    parameters: []
  /api/datasets/views/:
    get:
      operationId: api_datasets_views_list
      summary: List dataset views
      description: List all views for a specific dataset.
      parameters:
        - name: dataset
          in: query
          description: Dataset ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DatasetView"
      tags:
        - Datasets
    post:
      operationId: api_datasets_views_create
      summary: Create dataset view
      description: Create a view for a specific dataset.
      requestBody:
        $ref: "#/components/requestBodies/DatasetView"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetView"
      tags:
        - Datasets
    parameters: []
  /api/datasets/views/reset/:
    delete:
      operationId: api_datasets_views_reset
      summary: Reset dataset views
      description: Reset all views for a specific dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetViewReset"
        required: true
      responses:
        "204":
          description: ""
      tags:
        - Datasets
    parameters: []
  "/api/datasets/views/{id}/":
    get:
      operationId: api_datasets_views_read
      summary: Get dataset view details
      description: Get the details about a specific view in the data manager
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetView"
      tags:
        - Datasets
    put:
      operationId: api_datasets_views_update
      summary: Put dataset view
      description: Overwrite view data with updated filters and other information for
        a specific dataset.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DatasetView"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetView"
      tags:
        - Datasets
    patch:
      operationId: api_datasets_views_partial_update
      summary: Update dataset view
      description: Update view data with additional filters and other information for
        a specific dataset.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DatasetView"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetView"
      tags:
        - Datasets
    delete:
      operationId: api_datasets_views_delete
      summary: Delete dataset view
      description: Delete a specific view by ID.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - Datasets
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/datasets/{id}/":
    get:
      operationId: api_datasets_read
      summary: Get dataset
      description: Retrieve a specific dataset.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
      tags:
        - Datasets
    put:
      operationId: api_datasets_update
      summary: Put dataset
      description: Overwrite a specific dataset by ID.
      requestBody:
        $ref: "#/components/requestBodies/Dataset"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
      tags:
        - Datasets
    patch:
      operationId: api_datasets_partial_update
      summary: Update dataset
      description: Update a specific dataset by ID.
      requestBody:
        $ref: "#/components/requestBodies/Dataset"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
      tags:
        - Datasets
    delete:
      operationId: api_datasets_delete
      summary: Delete dataset
      description: Delete a dataset by ID
      responses:
        "204":
          description: ""
      tags:
        - Datasets
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/datasets/{id}/members":
    get:
      operationId: api_datasets_members_list
      summary: Get datasets members
      description: Retrieve the members for a specific dataset.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - Datasets
    post:
      operationId: api_datasets_members_create
      summary: Add dataset member
      description: Add a member to a specific dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetMember"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetMember"
      tags:
        - Datasets
    delete:
      operationId: api_datasets_members_delete
      summary: Remove member from dataset
      description: Remove a member from a specific dataset.
      parameters:
        - name: project_member
          in: query
          description: A unique integer value identifying this dataset member.
          schema:
            type: integer
      responses:
        "204":
          description: ""
      tags:
        - Datasets
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this dataset.
        required: true
        schema:
          type: integer
  /api/dm/actions/:
    get:
      operationId: api_dm_actions_list
      summary: Get actions
      description: Retrieve all the registered actions with descriptions that data
        manager can use.
      responses:
        "200":
          description: ""
      tags:
        - Data Manager
    post:
      operationId: api_dm_actions_create
      summary: Post actions
      description: Perform an action with the selected items from a specific view.
      responses:
        "201":
          description: ""
      tags:
        - Data Manager
    parameters: []
  /api/dm/columns/:
    get:
      operationId: api_dm_columns_list
      summary: Get data manager columns
      description: Retrieve the data manager columns available for the tasks in a
        specific project.
      responses:
        "200":
          description: ""
      tags:
        - Data Manager
    parameters: []
  /api/dm/project/:
    get:
      operationId: api_dm_project_list
      summary: Get project state
      description: Retrieve the project state for the data manager.
      responses:
        "200":
          description: ""
      tags:
        - Data Manager
    parameters: []
  /api/dm/views/:
    get:
      operationId: api_dm_views_list
      summary: List views
      description: List all views for a specific project.
      parameters:
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/View"
      tags:
        - Data Manager
    post:
      operationId: api_dm_views_create
      summary: Create view
      description: Create a view for a specific project.
      requestBody:
        $ref: "#/components/requestBodies/View"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/View"
      tags:
        - Data Manager
    parameters: []
  /api/dm/views/reset/:
    delete:
      operationId: api_dm_views_reset
      summary: Reset project views
      description: Reset all views for a specific project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ViewReset"
        required: true
      responses:
        "204":
          description: ""
      tags:
        - Data Manager
    parameters: []
  "/api/dm/views/{id}/":
    get:
      operationId: api_dm_views_read
      summary: Get view details
      description: Get the details about a specific view in the data manager
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/View"
      tags:
        - Data Manager
    put:
      operationId: api_dm_views_update
      summary: Put view
      description: Overwrite view data with updated filters and other information for
        a specific project.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/View"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/View"
      tags:
        - Data Manager
    patch:
      operationId: api_dm_views_partial_update
      summary: Update view
      description: Update view data with additional filters and other information for
        a specific project.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/View"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/View"
      tags:
        - Data Manager
    delete:
      operationId: api_dm_views_delete
      summary: Delete view
      description: Delete a specific view by ID.
      parameters:
        - name: id
          in: path
          description: View ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - Data Manager
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/import/file-upload/{id}":
    get:
      operationId: api_import_file-upload_read
      summary: Get file upload
      description: Retrieve details about a specific uploaded file.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUpload"
      tags:
        - Import
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: get
    patch:
      operationId: api_import_file-upload_partial_update
      summary: Update file upload
      description: Update a specific uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileUpload"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUpload"
      tags:
        - Import
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: update
    delete:
      operationId: api_import_file-upload_delete
      summary: Delete file upload
      description: Delete a specific uploaded file.
      responses:
        "204":
          description: ""
      tags:
        - Import
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: delete
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
  /api/invite:
    get:
      operationId: api_invite_read
      summary: Get organization invite link
      description: Get a link to use to invite a new member to an organization in
        Label Studio Enterprise.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationInvite"
      tags:
        - Invites
    parameters: []
  /api/invite/reset-token:
    post:
      operationId: api_invite_reset-token_create
      summary: Reset organization token
      description: Reset the token used in the invitation link to invite someone to an
        organization.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationInvite"
      tags:
        - Invites
    parameters: []
  /api/invite/revoke:
    post:
      operationId: api_invite_revoke_create
      summary: Revoke invite
      description: Revoke invite
      requestBody:
        $ref: "#/components/requestBodies/SendInvite"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendInvite"
      tags:
        - Invites
    parameters: []
  /api/invite/send-email:
    post:
      operationId: api_invite_send-email_create
      summary: Send email with invite
      description: Send email with invite to organization
      requestBody:
        $ref: "#/components/requestBodies/SendInvite"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendInvite"
      tags:
        - Invites
    parameters: []
  /api/label_links/:
    get:
      operationId: api_label_links_list
      summary: List label links
      description: List label links for a specific label and project.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/LabelLink"
      tags:
        - Labels
    post:
      operationId: api_label_links_create
      summary: Create label links
      description: Create label links to link new custom labels to your project
        labeling configuration.
      requestBody:
        $ref: "#/components/requestBodies/LabelLink"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelLink"
      tags:
        - Labels
    parameters: []
  "/api/label_links/{id}/":
    get:
      operationId: api_label_links_read
      summary: Get label link
      description: "Get label links for a specific project configuration. "
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelLink"
      tags:
        - Labels
    patch:
      operationId: api_label_links_partial_update
      summary: Update label link
      description: >
        
        Update a label link that links custom labels to a project labeling configuration, for example if the fromName,  

        toName, or name parameters for a tag in the labeling configuration change. 
      requestBody:
        $ref: "#/components/requestBodies/LabelLink"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelLink"
      tags:
        - Labels
    delete:
      operationId: api_label_links_delete
      summary: Remove label link
      description: >
        
        Remove a label link that links custom labels to your project labeling configuration. If you remove a label link,

        the label stops being available for the project it was linked to. You can add a new label link at any time. 
      responses:
        "204":
          description: ""
      tags:
        - Labels
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/labels/:
    get:
      operationId: api_labels_list
      summary: List labels
      description: List all custom labels added to your project separately from the
        labeling configuration.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Label"
      tags:
        - Labels
    post:
      operationId: api_labels_create
      summary: Create labels
      description: Add labels to your project without updating the labeling configuration.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LabelCreate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LabelCreate"
      tags:
        - Labels
    parameters: []
  /api/labels/bulk:
    post:
      operationId: api_labels_bulk_create
      summary: Bulk update labels
      description: >
        
        If you want to update the labels in saved annotations, use this endpoint.
      responses:
        "201":
          description: ""
      tags:
        - Labels
    parameters: []
  "/api/labels/{id}/":
    get:
      operationId: api_labels_read
      summary: Get label
      description: |
        
        Retrieve a specific custom label used for your project by its ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
      tags:
        - Labels
    patch:
      operationId: api_labels_partial_update
      summary: Update labels
      description: Update labels used for your project without updating the labeling
        configuration.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Label"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
      tags:
        - Labels
    delete:
      operationId: api_labels_delete
      summary: Remove labels
      description: Remove labels from your project without updating the labeling
        configuration.
      responses:
        "204":
          description: ""
      tags:
        - Labels
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/ml/:
    get:
      operationId: api_ml_list
      summary: List ML backends
      description: >
        
        List all configured ML backends for a specific project by ID.

        Use the following cURL command:

        ```bash

        curl https://app.heartex.com/api/ml?project={project_id} -H 'Authorization: Token abc123'
      parameters:
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MLBackend"
      tags:
        - Machine Learning
    post:
      operationId: api_ml_create
      summary: Add ML Backend
      description: >
        
        Add an ML backend to a project using the Label Studio UI or by sending a POST request using the following cURL 

        command:

        ```bash

        curl -X POST -H 'Content-type: application/json' https://app.heartex.com/api/ml -H 'Authorization: Token abc123'\

        --data '{"url": "http://localhost:9090", "project": {project_id}}' 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  description: Project ID
                  type: integer
                url:
                  description: ML backend URL
                  type: string
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    description: Project ID
                    type: integer
                  url:
                    description: ML backend URL
                    type: string
      tags:
        - Machine Learning
    parameters: []
  "/api/ml/{id}":
    get:
      operationId: api_ml_read
      summary: Get ML Backend
      description: >
        
        Get details about a specific ML backend connection by ID. For example, make a GET request using the

        following cURL command:

        ```bash

        curl https://app.heartex.com/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MLBackend"
      tags:
        - Machine Learning
    patch:
      operationId: api_ml_partial_update
      summary: Update ML Backend
      description: >
        
        Update ML backend parameters using the Label Studio UI or by sending a PATCH request using the following cURL command:

        ```bash

        curl -X PATCH -H 'Content-type: application/json' https://app.heartex.com/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'\

        --data '{"url": "http://localhost:9091"}' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MLBackend"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MLBackend"
      tags:
        - Machine Learning
    delete:
      operationId: api_ml_delete
      summary: Remove ML Backend
      description: >
        
        Remove an existing ML backend connection by ID. For example, use the

        following cURL command:

        ```bash

        curl -X DELETE https://app.heartex.com/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'
      responses:
        "204":
          description: ""
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ml backend.
        required: true
        schema:
          type: integer
  "/api/ml/{id}/interactive-annotating":
    post:
      operationId: api_ml_interactive-annotating_create
      summary: Request Interactive Annotation
      description: >
        
        Send a request to the machine learning backend set up to be used for interactive preannotations to retrieve a

        predicted region based on annotator input. 

        See [set up machine learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations) for more.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this ML backend.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MLInteractiveAnnotatingRequest"
        required: true
      responses:
        "200":
          description: Interactive annotation has succeeded.
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/ml/{id}/predict":
    post:
      operationId: api_ml_predict_create
      summary: Create predictions
      description: >
        
        Create predictions for all tasks using a specific ML backend so that you can set up an active learning strategy

        based on the confidence or uncertainty scores associated with the predictions. Creating predictions requires 

        a Label Studio ML backend set up and configured for your project. 


        See [Set up machine learning](https://labelstud.io/guide/ml.html) for more details 

        about a Label Studio ML backend.


        Reference the ML backend ID in the path of this API call. Get the ML backend ID by 

        [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).
      parameters:
        - name: batch_size
          in: query
          description: Computed number of tasks without predictions that the ML backend
            needs to predict.
          schema:
            type: integer
        - name: id
          in: path
          description: A unique integer value identifying this ML backend.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Predictions have successfully started.
          title: Predictions OK
        "500":
          description: Error
          content:
            application/json:
              schema:
                title: Error message
                type: string
                desciption: Error message
                example: Server responded with an error.
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/ml/{id}/predict/test":
    post:
      operationId: api_ml_predict_test_create
      summary: Predict
      description: >
        
        After you add an ML backend, call this API with the ML backend ID to run a test prediction on specific task data               
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this ML backend.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Predicting has successfully started.
        "500":
          description: Predicting error
          content:
            application/json:
              schema:
                description: Error message
                type: string
                example: Server responded with an error.
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/ml/{id}/train":
    post:
      operationId: api_ml_train_create
      summary: Train
      description: >
        
        After you add an ML backend, call this API with the ML backend ID to start training with 

        already-labeled tasks. 


        Get the ML backend ID by [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this ML backend.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_ground_truth:
                  description: Whether to include ground truth annotations in training
                  type: boolean
        required: true
      responses:
        "200":
          description: Training has successfully started.
        "500":
          description: Training error
          content:
            application/json:
              schema:
                description: Error message
                type: string
                example: Server responded with an error.
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/ml/{id}/versions":
    get:
      operationId: api_ml_versions_read
      summary: Get model versions
      description: Get available versions of the model.
      responses:
        "200":
          description: List of available versions.
      tags:
        - Machine Learning
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/model-provider-connections/:
    get:
      operationId: api_model-provider-connections_list
      summary: List model provider connections
      description: List all model provider connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModelProviderConnection"
      tags:
        - Model Provider Connection
    post:
      operationId: api_model-provider-connections_create
      summary: Create model provider connection
      description: Create a new model provider connection.
      requestBody:
        $ref: "#/components/requestBodies/ModelProviderConnection"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelProviderConnection"
      tags:
        - Model Provider Connection
    parameters: []
  /api/model-provider-connections/provider-choices:
    get:
      operationId: api_model-provider-connections_provider-choices_read
      summary: List model provider choices
      description: List all possible model provider choices
      responses:
        "200":
          description: ""
      tags:
        - Model Provider Connection
    parameters: []
  "/api/model-provider-connections/{id}/":
    get:
      operationId: api_model-provider-connections_read
      summary: Get model provider connection
      description: Retrieve a specific model provider connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelProviderConnection"
      tags:
        - Model Provider Connection
    put:
      operationId: api_model-provider-connections_update
      summary: Put model provider connection
      description: Overwrite a specific model provider connection by ID.
      requestBody:
        $ref: "#/components/requestBodies/ModelProviderConnection"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelProviderConnection"
      tags:
        - Model Provider Connection
    patch:
      operationId: api_model-provider-connections_partial_update
      summary: Update model provider connection
      description: Update a specific model provider connection by ID.
      requestBody:
        $ref: "#/components/requestBodies/ModelProviderConnection"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelProviderConnection"
      tags:
        - Model Provider Connection
    delete:
      operationId: api_model-provider-connections_delete
      summary: Delete model provider connection
      description: Delete a model provider connection by ID
      responses:
        "204":
          description: ""
      tags:
        - Model Provider Connection
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/model-provider/{id}/models":
    get:
      operationId: api_model-provider_models_read
      summary: List models provided by the model provider
      description: List all possible models provided by model provider
      responses:
        "200":
          description: ""
      tags:
        - Model Provider Models
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/model-run:
    get:
      operationId: api_model-run_list
      summary: Get list of model runs
      description: Get list of model runs for the organization, query parameters
        project, model_version, project_subset can be added to the api to
        further narrow down results
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModelRun"
      tags:
        - "Models: Model Runs"
    post:
      operationId: api_model-run_create
      summary: Create model run object
      description: Create a new model run for given project_id, model_version_id and
        project_subset if it does not exist. If it exists, delete the record and
        create new
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelRun"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelRun"
      tags:
        - "Models: Model Runs"
    parameters: []
  /api/model-run/batch-predictions:
    post:
      operationId: api_model-run_batch-predictions_create
      summary: Create batch predictions
      description: Create predictions for tasks given a ModelRun ID and a list of
        results {task_id, output}
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPredictions"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPredictions"
      tags:
        - "Models: Model Runs"
    parameters: []
  /api/model-versions/third-party/:
    get:
      operationId: api_model-versions_third-party_list
      summary: List third-party model versions
      description: List all third-party versions of a model.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: model_id
          in: query
          description: A unique integer value identifying the model ID to list versions for.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThirdPartyModelVersion"
      tags:
        - "Models: Model Versions"
    post:
      operationId: api_model-versions_third-party_create
      summary: Create third-party model version
      description: Create a new third-party version of a model.
      requestBody:
        $ref: "#/components/requestBodies/ThirdPartyModelVersion"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThirdPartyModelVersion"
      tags:
        - "Models: Model Versions"
    parameters: []
  "/api/model-versions/third-party/{id}/":
    get:
      operationId: api_model-versions_third-party_read
      summary: Get third-party model version
      description: Retrieve a specific third-party version of a model.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThirdPartyModelVersion"
      tags:
        - "Models: Model Versions"
    put:
      operationId: api_model-versions_third-party_update
      summary: Put third-party model version
      description: Overwrite a specific third-party model version by ID.
      requestBody:
        $ref: "#/components/requestBodies/ThirdPartyModelVersion"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThirdPartyModelVersion"
      tags:
        - "Models: Model Versions"
    patch:
      operationId: api_model-versions_third-party_partial_update
      summary: Update third-party model version
      description: Update a specific third-party model version by ID.
      requestBody:
        $ref: "#/components/requestBodies/ThirdPartyModelVersion"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThirdPartyModelVersion"
      tags:
        - "Models: Model Versions"
    delete:
      operationId: api_model-versions_third-party_delete
      summary: Delete third-party model version
      description: Delete a third-party model version by ID
      responses:
        "204":
          description: ""
      tags:
        - "Models: Model Versions"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/models/:
    get:
      operationId: api_models_list
      summary: List models
      description: List all models.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModelInterface"
      tags:
        - Models
    post:
      operationId: api_models_create
      summary: Create model
      description: Create a new model.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelInterfaceCreate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelInterfaceCreate"
      tags:
        - Models
    parameters: []
  /api/models/compatible-projects:
    get:
      operationId: api_models_compatible-projects_read
      summary: List projects compatible with model
      description: Retrieve a list of compatible project for model.
      responses:
        "200":
          description: ""
      tags:
        - Models
    parameters: []
  "/api/models/{id}/":
    get:
      operationId: api_models_read
      summary: Get model
      description: Retrieve a specific model.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelInterface"
      tags:
        - Models
    put:
      operationId: api_models_update
      summary: Put model
      description: Overwrite a specific model by ID.
      requestBody:
        $ref: "#/components/requestBodies/ModelInterface"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelInterface"
      tags:
        - Models
    patch:
      operationId: api_models_partial_update
      summary: Update model
      description: Update a specific model by ID.
      requestBody:
        $ref: "#/components/requestBodies/ModelInterface"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelInterface"
      tags:
        - Models
    delete:
      operationId: api_models_delete
      summary: Delete model
      description: Delete a model by ID
      responses:
        "204":
          description: ""
      tags:
        - Models
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/models/{id}/get-default-version-name":
    get:
      operationId: api_models_get-default-version-name_read
      summary: Get default model version name
      description: Get default model version name
      responses:
        "200":
          description: ""
      tags:
        - "Models: Model Versions"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/organizations/:
    get:
      operationId: api_organizations_list
      summary: List your organizations
      description: >
        
        Return a list of the organizations you've created or that you have access to.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationId"
      tags:
        - Organizations
    parameters: []
  "/api/organizations/{id}":
    get:
      operationId: api_organizations_read
      summary: Get organization settings
      description: Retrieve the settings for a specific organization by ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
      tags:
        - Organizations
    patch:
      operationId: api_organizations_partial_update
      summary: Update organization settings
      description: Update the settings for a specific organization by ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
      tags:
        - Organizations
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this organization.
        required: true
        schema:
          type: integer
  "/api/organizations/{id}/memberships":
    get:
      operationId: api_organizations_memberships_list
      summary: Get organization members list
      description: Retrieve a list of the organization members and their IDs.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: role
          in: query
          description: role
          required: false
          schema:
            type: string
        - name: user__last_activity__gte
          in: query
          description: user__last_activity__gte
          required: false
          schema:
            type: string
        - name: user__last_activity__lte
          in: query
          description: user__last_activity__lte
          required: false
          schema:
            type: string
        - name: is_deleted
          in: query
          description: is_deleted
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags:
        - Organizations
    post:
      operationId: api_organizations_memberships_create
      summary: Create organization member/role
      description: >
        
        Assign a role to a user in an organization. To do so, make the following cURL request:


        ```bash

        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \

        -X POST 'https://app.heartex.com/api/organizations/{id}/memberships' --data '[{"user_id": Int, "role": "NO|DI|OW|AD|MA|AN|RE" }]'

        ```


        Enumerate a role with one of the following abbreviations:


        | Role | Full Role Name |

        | --- | --- |

        | NO | Not Activated |

        | DI | Deactivated |

        | OW | Owner |

        | AD | Administrator |

        | MA | Manager |

        | AN | Annotator |

        | RE | Reviewer |


        For example, to set a user with an ID of 9 as an annotator, make the following cURL request:

        ```bash

        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \

        -X POST 'https://app.heartex.com/api/organizations/{id}/memberships' --data '[{"user_id": 9, "role": "AN" }]'

        ```
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this organization.
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/OrganizationMember"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationMember"
      tags:
        - Organizations
    patch:
      operationId: api_organizations_memberships_partial_update
      summary: Update organization member/role
      description: |
        
        Update organization membership or role for a specific user ID.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this organization.
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/OrganizationMember"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationMember"
      tags:
        - Organizations
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/organizations/{id}/memberships/{user_pk}/":
    delete:
      operationId: api_organizations_memberships_delete
      summary: Soft delete an organization member
      description: Soft delete a member from the organization.
      parameters:
        - name: user_pk
          in: path
          description: A unique integer value identifying the user to be deleted from the
            organization.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Member deleted successfully.
        "404":
          description: Member not found
        "405":
          description: User cannot soft delete self.
      tags:
        - Organizations
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: user_pk
        in: path
        required: true
        schema:
          type: string
  "/api/organizations/{id}/set-default-role":
    patch:
      operationId: api_organizations_set-default-role_partial_update
      summary: Update default role
      description: Update the default role for members of a specific organization.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultRole"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultRole"
      tags:
        - Organizations
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this organization.
        required: true
        schema:
          type: integer
  /api/predictions/:
    get:
      operationId: api_predictions_list
      summary: List predictions
      description: List all predictions and their IDs.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Prediction"
      tags:
        - Predictions
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: list
    post:
      operationId: api_predictions_create
      summary: Create prediction
      description: Create a prediction for a specific task.
      requestBody:
        $ref: "#/components/requestBodies/Prediction"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prediction"
      tags:
        - Predictions
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: create
    parameters: []
  "/api/predictions/{id}/":
    get:
      operationId: api_predictions_read
      summary: Get prediction details
      description: Get details about a specific prediction by its ID.
      parameters:
        - name: id
          in: path
          description: Prediction ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prediction"
      tags:
        - Predictions
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: get
    put:
      operationId: api_predictions_update
      summary: Put prediction
      description: Overwrite prediction data by prediction ID.
      parameters:
        - name: id
          in: path
          description: Prediction ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Prediction"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prediction"
      tags:
        - Predictions
    patch:
      operationId: api_predictions_partial_update
      summary: Update prediction
      description: Update prediction data by prediction ID.
      parameters:
        - name: id
          in: path
          description: Prediction ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Prediction"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prediction"
      tags:
        - Predictions
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: update
    delete:
      operationId: api_predictions_delete
      summary: Delete prediction
      description: Delete a prediction by prediction ID.
      parameters:
        - name: id
          in: path
          description: Prediction ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: ""
      tags:
        - Predictions
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: delete
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/project-templates/:
    get:
      operationId: api_project-templates_list
      summary: Get project templates
      description: Get a list of all project templates for an organization.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectTemplate"
      tags:
        - Project Templates
    post:
      operationId: api_project-templates_create
      summary: Create project template
      description: Create a project template for an organization.
      requestBody:
        $ref: "#/components/requestBodies/ProjectTemplate"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTemplate"
      tags:
        - Project Templates
    parameters: []
  "/api/project-templates/{id}":
    get:
      operationId: api_project-templates_read
      summary: Get a project template
      description: Get a specific project template by ID for an organization.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTemplate"
      tags:
        - Project Templates
    put:
      operationId: api_project-templates_update
      summary: Overwrite a project template
      description: Overwrite a specific project template by ID for an organization.
      requestBody:
        $ref: "#/components/requestBodies/ProjectTemplate"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTemplate"
      tags:
        - Project Templates
    patch:
      operationId: api_project-templates_partial_update
      summary: Update a project template
      description: Update the details of a specific project template by ID for an
        organization.
      requestBody:
        $ref: "#/components/requestBodies/ProjectTemplate"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTemplate"
      tags:
        - Project Templates
    delete:
      operationId: api_project-templates_delete
      summary: Delete a project template
      description: Delete a specific project template by ID for an organization.
      responses:
        "204":
          description: ""
      tags:
        - Project Templates
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project template.
        required: true
        schema:
          type: integer
  "/api/project-templates/{id}/create-project":
    post:
      operationId: api_project-templates_create-project_create
      summary: Create project from template
      description: Create a project from a specific project template by ID for an
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: The title of the project to be created from the template.
                  type: string
                description:
                  description: A description for the project.
                  type: string
                workspace_id:
                  description: A unique integer value identifying the workspace in which to create
                    the project.
                  type: integer
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    description: The title of the project to be created from the template.
                    type: string
                  description:
                    description: A description for the project.
                    type: string
                  workspace_id:
                    description: A unique integer value identifying the workspace in which to create
                      the project.
                    type: integer
      tags:
        - Project Templates
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project template.
        required: true
        schema:
          type: integer
  /api/projects/:
    get:
      operationId: api_projects_list
      summary: List your projects
      description: >
        
        Return a list of the projects that you've created.


        To perform most tasks with the Label Studio API, you must specify the project ID, sometimes referred to as the `pk`.

        To retrieve a list of your Label Studio projects, update the following command to match your own environment.

        Replace the domain name, port, and authorization token, then run the following from the command line:

        ```bash

        curl -X GET https://app.heartex.com/api/projects/ -H 'Authorization: Token abc123'

        ```
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: ids
          in: query
          description: ids
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: title
          required: false
          schema:
            type: string
        - name: workspaces
          in: query
          description: workspaces
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/AllRolesProjectList"
      tags:
        - Projects
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: list
      x-fern-pagination:
        offset: $request.page
        results: $response.results
    post:
      operationId: api_projects_create
      summary: Create new project
      description: >
        
        Create a project and set up the labeling interface in Label Studio using the API.


        ```bash

        curl -H Content-Type:application/json -H 'Authorization: Token abc123' -X POST 'https://app.heartex.com/api/projects'     --data '{"label_config": "<View>[...]</View>"}'

        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LseProjectCreate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseProjectCreate"
      tags:
        - Projects
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: create
    parameters: []
  /api/projects/roles/:
    get:
      operationId: api_projects_roles_list
      summary: List project roles for current user
      description: |
        
        List project roles for requested IDs for the current user
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: ids
          in: query
          description: ids
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectRole"
      tags:
        - Project Roles
    post:
      operationId: api_projects_roles_create
      summary: Create project role for user
      description: >
        
        Create project role for user allowing the user the same access level provided by organization role.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRole"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectRole"
      tags:
        - Project Roles
    parameters: []
  "/api/projects/roles/{id}/":
    delete:
      operationId: api_projects_roles_delete
      summary: Remove project role for user
      description: >
        
        Remove project role for user allowing the user the same access level provided by organization role.
      responses:
        "204":
          description: ""
      tags:
        - Project Roles
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project role.
        required: true
        schema:
          type: integer
  /api/projects/validate/:
    post:
      operationId: api_projects_validate_create
      summary: Validate label config
      description: Validate an arbitrary labeling configuration.
      requestBody:
        $ref: "#/components/requestBodies/ProjectLabelConfig"
      responses:
        "204":
          description: Validation success
      tags:
        - Projects
    parameters: []
  "/api/projects/{id}/":
    get:
      operationId: api_projects_read
      summary: Get project by ID
      description: Retrieve information about a project by project ID.
      responses:
        "200":
          description: Project information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                response:
                  value:
                    id: 1
                    title: My project
                    description: My first project
                    label_config: <View>[...]</View>
                    expert_instruction: Label all cats
                    show_instruction: true
                    show_skip_button: true
                    enable_empty_annotation: true
                    show_annotation_history: true
                    organization: 1
                    color: "#FF0000"
                    maximum_annotations: 1
                    is_published: true
                    model_version: 1.0.0
                    is_draft: false
                    created_by:
                      id: 1
                      first_name: Jo
                      last_name: Doe
                      email: manager@humansignal.com
                    created_at: 2023-08-24T14:15:22Z
                    min_annotations_to_start_training: 0
                    start_training_on_annotation_update: true
                    show_collab_predictions: true
                    num_tasks_with_annotations: 10
                    task_number: 100
                    useful_annotation_number: 10
                    ground_truth_number: 5
                    skipped_annotations_number: 0
                    total_annotations_number: 10
                    total_predictions_number: 0
                    sampling: Sequential sampling
                    show_ground_truth_first: true
                    show_overlap_first: true
                    overlap_cohort_percentage: 100
                    task_data_login: user
                    task_data_password: secret
                    control_weights: {}
                    parsed_label_config: '{"tag": {...}}'
                    evaluate_predictions_automatically: false
                    config_has_control_tags: true
                    skip_queue: REQUEUE_FOR_ME
                    reveal_preannotations_interactively: true
                    pinned_at: 2023-08-24T14:15:22Z
                    finished_task_number: 10
                    queue_total: 10
                    queue_done: 100
      tags:
        - Projects
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: get
    patch:
      operationId: api_projects_partial_update
      summary: Update project
      description: Update the project settings for a specific project.
      requestBody:
        $ref: "#/components/requestBodies/Project"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
      tags:
        - Projects
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: update
    delete:
      operationId: api_projects_delete
      summary: Delete project
      description: Delete a project by specified project ID.
      responses:
        "204":
          description: ""
      tags:
        - Projects
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: delete
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/annotation-history/":
    get:
      operationId: api_projects_annotation-history_list
      summary: List annotation history items for project
      description: List all annotation history items for the project with pagination.
      parameters:
        - name: created_at_from
          in: query
          description: Filter for annotation history items created at or after the ISO
            8601 formatted date (YYYY-MM-DDTHH:MM:SS)
          required: false
          schema:
            type: string
        - name: created_at_to
          in: query
          description: Filter for annotation history items created at or before the ISO
            8601 formatted date (YYYY-MM-DDTHH:MM:SS)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/AnnotationHistory"
      tags:
        - Annotation History
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/aws-custom-function-logs":
    get:
      operationId: api_projects_aws-custom-function-logs_read
      summary: Get AWS lambda logs for project
      description: Get AWS lambda logs for project, including filtering by start and
        end dates
      parameters:
        - name: start_date
          in: query
          description: Start date for AWS logs filtering
          schema:
            type: string
        - name: end_date
          in: query
          description: End date for AWS logs filtering
          schema:
            type: string
      responses:
        "200":
          description: Successful response returns list of AWS lambda logs
          content:
            application/json:
              schema:
                title: List of AWS lambda logs
                description: List of AWS lambda logs
                type: object
      tags:
        - AWS
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/dashboard":
    get:
      operationId: api_projects_dashboard_read
      summary: Get dashboard data for project
      description: Get dashboard data for project, including annotations and tasks stats.
      responses:
        "200":
          description: Successful response returns project-related annotation statistics
          content:
            application/json:
              schema:
                title: Task creation response
                description: Task creation response
                type: object
                properties:
                  tasks:
                    title: tasks
                    description: Total number of tasks
                    type: integer
                  annotations:
                    title: annotations
                    description: Total number of annotations
                    type: integer
                  annotated_tasks:
                    title: annotated_tasks
                    description: Number of annotated (completed) tasks
                    type: integer
                  skipped_tasks:
                    title: Number of tasks that have been skipped by at least one annotator
                    description: ""
                    type: integer
                  reviewed_tasks:
                    title: reviewed_tasks
                    description: Number of tasks that have been reviewed by at least one reviewer
                    type: integer
                  remaining_tasks:
                    title: remaining_tasks
                    description: Total number of uncompleted tasks
                    type: integer
      tags:
        - Dashboard
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/dashboard-members":
    get:
      operationId: api_projects_dashboard-members_read
      summary: Get dashboard data for members
      description: Get dashboard for members, including similarity matrix, user
        statistics and users list.
      parameters:
        - name: per_label
          in: query
          description: Per label calculation
          schema:
            type: boolean
        - name: use_kappa
          in: query
          description: Use kappa statistics for calculation
          schema:
            type: boolean
        - name: start_date
          in: query
          description: Start date for dashboard stats calculation. UTC timezone by
            default. Use iso format to specify timezone.
          schema:
            type: string
            format: yyyy-mm-dd-hh-mm
        - name: end_date
          in: query
          description: End date for dashboard stats calculation. UTC timezone by default.
            Use iso format to specify timezone.
          schema:
            type: string
            format: yyyy-mm-dd-hh-mm
        - name: action
          in: query
          description: All data objects will be filtered by updated_at\created_at field
          schema:
            type: string
            format: updated|created
        - name: updated_by
          in: query
          description: All task objects will be filtered by updated_by field. Only tasks
            that were updated by concrete user will be taken in account.
          schema:
            type: string
            format: user id|username
      responses:
        "200":
          description: Successful response returns project-related annotation statistics
          content:
            application/json:
              schema:
                title: Task creation response
                description: Task creation response
                type: object
                properties:
                  users:
                    title: users
                    description: List of users
                    type: array
                    items:
                      title: User data
                      type: object
                  similarity:
                    title: similarity
                    description: Consensus statistics between different users
                    type: array
                    items:
                      title: Similarities, common tasks
                      type: object
                  stats:
                    title: stats
                    description: Number of annotated (completed) tasks
                    type: array
                    items:
                      title: User statistics
                      description: User statistics
                      type: object
                      properties:
                        finished:
                          title: Finished tasks
                          type: integer
                        skipped:
                          title: Skipped tasks
                          type: integer
                        accepted:
                          title: Accepted tasks
                          description: Number of annotations marked as "Accepted" by reviewer
                          type: integer
                        rejected:
                          title: Rejected tasks
                          description: Number of annotations marked as "Rejected" by reviewer
                          type: integer
                        progress:
                          title: Annotation progress
                          description: Fraction of annotation work done so far
                          type: integer
                        mean_time:
                          title: Mean time
                          description: Average mean time spent on annotation
                          type: number
                        median_time:
                          title: Median time
                          description: Average median time spent on annotation
                          type: number
                        gt:
                          title: Ground Truth score
                          description: Average agreement with Ground Truth annotations
                          type: number
                        predictions:
                          title: Predictions score
                          description: Average agreement with predictions
                          type: number
                        review_score:
                          title: Review score
                          description: Average reviewing score, when calling with "per_label=true",
                            returns dictionary with labels to score breakdown
                          type: number
      tags:
        - Dashboard
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/duplicate/":
    post:
      operationId: api_projects_duplicate_create
      summary: Duplicate project
      description: Make a copy of project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDuplicate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDuplicate"
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/export":
    get:
      operationId: api_projects_export_read
      summary: Easy export of tasks and annotations
      description: >
        
        <i>Note: if you have a large project it's recommended to use

        export snapshots, this easy export endpoint might have timeouts.</i><br/><br>

        Export annotated tasks as a file in a specific format.

        For example, to export JSON annotations for a project to a file called `annotations.json`,

        run the following from the command line:

        ```bash

        curl -X GET https://app.heartex.com/api/projects/{id}/export?exportType=JSON -H 'Authorization: Token abc123' --output 'annotations.json'

        ```

        To export all tasks, including skipped tasks and others without annotations, run the following from the command line:

        ```bash

        curl -X GET https://app.heartex.com/api/projects/{id}/export?exportType=JSON&download_all_tasks=true -H 'Authorization: Token abc123' --output 'annotations.json'

        ```

        To export specific tasks with IDs of 123 and 345, run the following from the command line:

        ```bash

        curl -X GET https://app.heartex.com/api/projects/{id}/export?ids[]=123\&ids[]=345 -H 'Authorization: Token abc123' --output 'annotations.json'

        ```
      parameters:
        - name: export_type
          in: query
          description: Selected export format (JSON by default)
          schema:
            type: string
        - name: download_all_tasks
          in: query
          description: >
            
            If true, download all tasks regardless of status. If false, download only annotated tasks.
          schema:
            type: string
        - name: download_resources
          in: query
          description: >
            
            If true, download all resource files such as images, audio, and others relevant to the tasks.
          schema:
            type: boolean
        - name: ids
          in: query
          description: >
            
            Specify a list of task IDs to retrieve only the details for those tasks.
          style: form
          explode: false
          schema:
            type: array
            items:
              title: Task ID
              description: Individual task ID
              type: integer
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Exported data
          content:
            application/json:
              schema:
                title: Export file
                description: Export file with results
                type: string
                format: binary
      tags:
        - Export
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/export/formats":
    get:
      operationId: api_projects_export_formats_read
      summary: Get export formats
      description: Retrieve the available export formats for the current project by ID.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Export formats
          content:
            application/json:
              schema:
                title: Format list
                description: List of available formats
                type: array
                items:
                  title: Export format
                  type: string
      tags:
        - Export
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/exports/":
    get:
      operationId: api_projects_exports_list
      summary: List all export snapshots
      description: |
        
        Returns a list of exported files for a specific project by ID.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Export"
      tags:
        - Export
    post:
      operationId: api_projects_exports_create
      summary: Create new export snapshot
      description: >
        
        Create a new export request to start a background task and generate an export file for a specific project by ID.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LseExportCreate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseExportCreate"
      tags:
        - Export
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this export.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/exports/{export_pk}":
    get:
      operationId: api_projects_exports_read
      summary: Get export snapshot by ID
      description: >
        
        Retrieve information about an export file by export ID for a specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: export_pk
          in: path
          description: Primary key identifying the export file.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Export"
      tags:
        - Export
    delete:
      operationId: api_projects_exports_delete
      summary: Delete export snapshot
      description: |
        
        Delete an export file by specified export ID.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: export_pk
          in: path
          description: Primary key identifying the export file.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - Export
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this export.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/exports/{export_pk}/convert":
    post:
      operationId: api_projects_exports_convert_create
      summary: Export conversion
      description: |
        
        Convert export snapshot to selected format
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: export_pk
          in: path
          description: Primary key identifying the export file.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportConvert"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportConvert"
      tags:
        - Export
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this export.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/exports/{export_pk}/download":
    get:
      operationId: api_projects_exports_download_read
      summary: Download export snapshot as file in specified format
      description: >
        
        Download an export file in the specified format for a specific project. Specify the project ID with the `id`

        parameter in the path and the ID of the export file you want to download using the `export_pk` parameter

        in the path.


        Get the `export_pk` from the response of the request to [Create new export](/api#operation/api_projects_exports_create)

        or after [listing export files](/api#operation/api_projects_exports_list).
      parameters:
        - name: exportType
          in: query
          description: Selected export format
          schema:
            type: string
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: export_pk
          in: path
          description: Primary key identifying the export file.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - Export
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this export.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/file-uploads":
    get:
      operationId: api_projects_file-uploads_list
      summary: Get files list
      description: >
        
        Retrieve the list of uploaded files used to create labeling tasks for a specific project.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: all
          in: query
          description: Set to "true" if you want to retrieve all file uploads
          schema:
            type: boolean
        - name: ids
          in: query
          description: Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]
          style: form
          explode: false
          schema:
            type: array
            items:
              title: File upload ID
              type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FileUpload"
      tags:
        - Import
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: list
    delete:
      operationId: api_projects_file-uploads_delete
      summary: Delete files
      description: |
        
        Delete uploaded files for a specific project.
      responses:
        "204":
          description: ""
      tags:
        - Import
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: delete_many
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/import":
    post:
      operationId: api_projects_import_create
      summary: Import tasks
      description: >
        
        Import data as labeling tasks in bulk using this API endpoint. You can use this API endpoint to import multiple tasks.

        One POST request is limited at 250K tasks and 200 MB.


        **Note:** Imported data is verified against a project *label_config* and must

        include all variables that were used in the *label_config*. For example,

        if the label configuration has a *$text* variable, then each item in a data object

        must include a "text" field.

        <br>


        ## POST requests

        <hr style="opacity:0.3">


        There are three possible ways to import tasks with this endpoint:


        ### 1\. **POST with data**

        Send JSON tasks as POST data. Only JSON is supported for POSTing files directly.

        Update this example to specify your authorization token and Label Studio instance host, then run the following from

        the command line.


        ```bash

        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \

        -X POST 'https://app.heartex.com/api/projects/1/import' --data '[{"text": "Some text 1"}, {"text": "Some text 2"}]'

        ```


        ### 2\. **POST with files**

        Send tasks as files. You can attach multiple files with different names.


        - **JSON**: text files in JavaScript object notation format

        - **CSV**: text files with tables in Comma Separated Values format

        - **TSV**: text files with tables in Tab Separated Value format

        - **TXT**: simple text files are similar to CSV with one column and no header, supported for projects with one source only


        Update this example to specify your authorization token, Label Studio instance host, and file name and path,

        then run the following from the command line:


        ```bash

        curl -H 'Authorization: Token abc123' \

        -X POST 'https://app.heartex.com/api/projects/1/import' -F ‘file=@path/to/my_file.csv’

        ```


        ### 3\. **POST with URL**

        You can also provide a URL to a file with labeling tasks. Supported file formats are the same as in option 2.


        ```bash

        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \

        -X POST 'https://app.heartex.com/api/projects/1/import' \

        --data '[{"url": "http://example.com/test1.csv"}, {"url": "http://example.com/test2.csv"}]'

        ```


        <br>
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportApi"
        required: true
      responses:
        "201":
          description: Tasks successfully imported
          content:
            application/json:
              schema:
                title: Task creation response
                description: Task creation response
                type: object
                properties:
                  task_count:
                    title: task_count
                    description: Number of tasks added
                    type: integer
                  annotation_count:
                    title: annotation_count
                    description: Number of annotations added
                    type: integer
                  predictions_count:
                    title: predictions_count
                    description: Number of predictions added
                    type: integer
                  duration:
                    title: duration
                    description: Time in seconds to create
                    type: number
                  file_upload_ids:
                    title: file_upload_ids
                    description: Database IDs of uploaded files
                    type: array
                    items:
                      title: File Upload IDs
                      type: integer
                  could_be_tasks_list:
                    title: could_be_tasks_list
                    description: Whether uploaded files can contain lists of tasks, like CSV/TSV
                      files
                    type: boolean
                  found_formats:
                    title: found_formats
                    description: The list of found file formats
                    type: array
                    items:
                      title: File format
                      type: string
                  data_columns:
                    title: data_columns
                    description: The list of found data columns
                    type: array
                    items:
                      title: Data column name
                      type: string
        "400":
          description: ""
          content:
            application/json:
              schema:
                title: Incorrect task data
                description: String with error description
                type: string
      tags:
        - Import
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: import_tasks
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this task.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/imports/{import_pk}/":
    get:
      operationId: api_projects_imports_read
      summary: Get project import info
      description: Return data related to async project import operation
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project import.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectImport"
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project import.
        required: true
        schema:
          type: integer
      - name: import_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/members/":
    get:
      operationId: api_projects_members_list
      summary: Get project members
      description: Retrieve the members for a specific project.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags:
        - Projects
    post:
      operationId: api_projects_members_create
      summary: Add project member
      description: Add a member to a specific project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectMember"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectMember"
      tags:
        - Projects
    delete:
      operationId: api_projects_members_delete
      summary: Remove member from project
      description: Remove a member from a specific project.
      parameters:
        - name: project_member
          in: query
          description: A unique integer value identifying this project member.
          schema:
            type: integer
      responses:
        "204":
          description: ""
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/project-extra-params/":
    get:
      operationId: api_projects_project-extra-params_read
      summary: Get annotator weights
      description: Retrieve the annotator weights for statistics and Cohen's Kappa for
        a specific project.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseProjectParams"
      tags:
        - Projects
    post:
      operationId: api_projects_project-extra-params_create
      summary: Create annotator weights for statistics
      description: Create annotator weights to be used in the annotation statistics
        for a project, such as when calculating kappa metrics for
        inter-annotator agreement.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LseProjectParams"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseProjectParams"
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/reimports/{reimport_pk}/":
    get:
      operationId: api_projects_reimports_read
      summary: Get project reimport info
      description: Return data related to async project reimport operation
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project reimport.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectReimport"
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project reimport.
        required: true
        schema:
          type: integer
      - name: reimport_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/roles":
    get:
      operationId: api_projects_roles_read
      summary: List project roles
      description: >
        
        List users and their project level roles for a given project. 

        If user is not listed here and is a member of the project then they would behave as assigned role in organization.
      responses:
        "200":
          description: ""
      tags:
        - Project Roles
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project role.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/tasks/":
    get:
      operationId: api_projects_tasks_list
      summary: List project tasks
      description: >
        
        Retrieve a paginated list of tasks for a specific project. For example, use the following cURL command:

        ```bash

        curl -X GET https://app.heartex.com/api/projects/{id}/tasks/?page=1&page_size=10 -H 'Authorization: Token abc123'

        ```
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: '[or "start"] current page'
          schema:
            type: integer
        - name: page_size
          in: query
          description: '[or "length"] tasks per page. Max value 100'
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags:
        - Projects
    delete:
      operationId: api_projects_tasks_delete
      summary: Delete all tasks
      description: Delete all tasks from a specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: ""
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this task.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/tasks/assignees":
    post:
      operationId: api_projects_tasks_assignees_create
      summary: Bulk assign tasks
      description: Assign multiple tasks to a specific user for a specific project.
      parameters:
        - name: type
          in: query
          description: Assignment type
          schema:
            type: string
        - name: users
          in: query
          description: Assignees
          schema:
            type: string
        - name: selected_items
          in: query
          description: Selected items
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/TaskAssignment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: Project
                type: object
                properties:
                  id:
                    title: Project ID
                    description: Project ID
                    type: integer
                  redirect_url:
                    description: Redirect URL to project
                    type: string
                desciption: Project ID
        "400":
          description: Can't assign tasks
      tags:
        - Tasks
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{id}/tasks/{task_pk}/assignees":
    get:
      operationId: api_projects_tasks_assignees_read
      summary: Get assigned tasks and assignees
      description: Retrieve a list of tasks and assignees for those tasks for a
        specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: task_pk
          in: path
          description: A unique integer value identifying this task.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
      tags:
        - Tasks
    post:
      operationId: api_projects_tasks_assignees_create
      summary: Create task assignee
      description: Assign a user to a task in a specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: task_pk
          in: path
          description: A unique integer value identifying this task.
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/TaskAssignment"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
      tags:
        - Tasks
    patch:
      operationId: api_projects_tasks_assignees_partial_update
      summary: Update task assignee
      description: Update the assignee for a task in a specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: task_pk
          in: path
          description: A unique integer value identifying this task.
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/TaskAssignment"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
      tags:
        - Tasks
    delete:
      operationId: api_projects_tasks_assignees_delete
      summary: Delete task assignee
      description: Remove the assignee for a task for a specific project.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
        - name: task_pk
          in: path
          description: A unique integer value identifying this task.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: ""
      tags:
        - Tasks
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: task_pk
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/update-stats":
    get:
      operationId: api_projects_update-stats_read
      summary: Start stats recalculation
      description: Start stats recalculation for given project
      parameters:
        - name: stat_type
          in: query
          description: "Stat type to recalculate. Possible values: label, stats"
          schema:
            type: string
      responses:
        "200":
          description: Successful response returns job id
          content:
            application/json:
              schema:
                title: Stat recalculation job
                description: Stat recalculation job
                type: object
      tags:
        - Stats
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/projects/{id}/validate/":
    post:
      operationId: api_projects_validate_label_config
      summary: Validate project label config
      description: >
        
        Determine whether the label configuration for a specific project is valid.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this project.
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/ProjectLabelConfig"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectLabelConfig"
      tags:
        - Projects
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
  "/api/projects/{project_pk}/ground-truth-tasks":
    get:
      operationId: api_projects_ground-truth-tasks_read
      summary: Get Project Ground Truth Task List with Predictions and Accuracy details
      description: >
        
        Provides list of tasks, ground truth annotations and predictions associated with the task and overall accuracy details
      parameters:
        - name: model_run
          in: query
          description: A unique ID of a ModelRun
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags:
        - Projects
    parameters:
      - name: project_pk
        in: path
        required: true
        schema:
          type: string
  /api/saml/settings:
    get:
      operationId: api_saml_settings_list
      summary: Retrieve SAML2 Settings
      description: Retrieve SAML2 settings for the currently active organization.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SamlSettings"
      tags:
        - SSO
    post:
      operationId: api_saml_settings_create
      summary: Update SAML2 Settings
      description: Update SAML2 settings for the currently active organization.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SamlSettingsUpdate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamlSettingsUpdate"
      tags:
        - SSO
    parameters: []
  /api/scim/settings:
    get:
      operationId: api_scim_settings_list
      summary: Retrieve SCIM Settings
      description: Retrieve SCIM settings for the currently active organization.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScimSettings"
      tags:
        - SSO
    post:
      operationId: api_scim_settings_create
      summary: Update SCIM Settings
      description: Update SCIM settings for the currently active organization.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScimSettingsUpdate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimSettingsUpdate"
      tags:
        - SSO
    parameters: []
  /api/storages/:
    get:
      operationId: api_storages_list
      summary: List all import storages from the project
      description: Retrieve a list of the import storages of all types with their IDs.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of ImportStorageSerializer
      tags:
        - Storage
    parameters: []
  /api/storages/azure/:
    get:
      operationId: api_storages_azure_list
      summary: Get all import storage
      description: Get list of all Azure import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    post:
      operationId: api_storages_azure_create
      summary: Create new storage
      description: Get new Azure import storage
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    parameters: []
  /api/storages/azure/validate:
    post:
      operationId: api_storages_azure_validate_create
      summary: Validate import storage
      description: Validate a specific Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    parameters: []
  "/api/storages/azure/{id}":
    get:
      operationId: api_storages_azure_read
      summary: Get import storage
      description: Get a specific Azure import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    patch:
      operationId: api_storages_azure_partial_update
      summary: Update import storage
      description: Update a specific Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobImportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    delete:
      operationId: api_storages_azure_delete
      summary: Delete import storage
      description: Delete a specific Azure import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob import storage.
        required: true
        schema:
          type: integer
  "/api/storages/azure/{id}/sync":
    post:
      operationId: api_storages_azure_sync_create
      summary: Sync import storage
      description: Sync tasks from an Azure import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobImportStorage"
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export:
    get:
      operationId: api_storages_export_list
      summary: List all export storages from the project
      description: Retrieve a list of the export storages of all types with their IDs.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of ExportStorageSerializer
      tags:
        - Storage
    parameters: []
  /api/storages/export/azure:
    get:
      operationId: api_storages_export_azure_list
      summary: Get all export storage
      description: Get a list of all Azure export storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    post:
      operationId: api_storages_export_azure_create
      summary: Create export storage
      description: Create a new Azure export storage connection to store annotations.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    parameters: []
  /api/storages/export/azure/validate:
    post:
      operationId: api_storages_export_azure_validate_create
      summary: Validate export storage
      description: Validate a specific Azure export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    parameters: []
  "/api/storages/export/azure/{id}":
    get:
      operationId: api_storages_export_azure_read
      summary: Get export storage
      description: Get a specific Azure export storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    patch:
      operationId: api_storages_export_azure_partial_update
      summary: Update export storage
      description: Update a specific Azure export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobExportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    delete:
      operationId: api_storages_export_azure_delete
      summary: Delete export storage
      description: Delete a specific Azure export storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob export storage.
        required: true
        schema:
          type: integer
  "/api/storages/export/azure/{id}/sync":
    post:
      operationId: api_storages_export_azure_sync_create
      summary: Sync export storage
      description: Sync tasks from an Azure export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/AzureBlobExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureBlobExportStorage"
      tags:
        - "Storage: Azure"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export/gcs:
    get:
      operationId: api_storages_export_gcs_list
      summary: Get all export storage
      description: Get a list of all GCS export storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    post:
      operationId: api_storages_export_gcs_create
      summary: Create export storage
      description: Create a new GCS export storage connection to store annotations.
      requestBody:
        $ref: "#/components/requestBodies/GCSExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    parameters: []
  /api/storages/export/gcs/validate:
    post:
      operationId: api_storages_export_gcs_validate_create
      summary: Validate export storage
      description: Validate a specific GCS export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    parameters: []
  "/api/storages/export/gcs/{id}":
    get:
      operationId: api_storages_export_gcs_read
      summary: Get export storage
      description: Get a specific GCS export storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    patch:
      operationId: api_storages_export_gcs_partial_update
      summary: Update export storage
      description: Update a specific GCS export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSExportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    delete:
      operationId: api_storages_export_gcs_delete
      summary: Delete export storage
      description: Delete a specific GCS export storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs export storage.
        required: true
        schema:
          type: integer
  "/api/storages/export/gcs/{id}/sync":
    post:
      operationId: api_storages_export_gcs_sync_create
      summary: Sync export storage
      description: Sync tasks from an GCS export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSExportStorage"
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export/redis:
    get:
      operationId: api_storages_export_redis_list
      summary: Get all export storage
      description: Get a list of all Redis export storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    post:
      operationId: api_storages_export_redis_create
      summary: Create export storage
      description: Create a new Redis export storage connection to store annotations.
      requestBody:
        $ref: "#/components/requestBodies/RedisExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    parameters: []
  /api/storages/export/redis/validate:
    post:
      operationId: api_storages_export_redis_validate_create
      summary: Validate export storage
      description: Validate a specific Redis export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    parameters: []
  "/api/storages/export/redis/{id}":
    get:
      operationId: api_storages_export_redis_read
      summary: Get export storage
      description: Get a specific Redis export storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    patch:
      operationId: api_storages_export_redis_partial_update
      summary: Update export storage
      description: Update a specific Redis export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisExportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    delete:
      operationId: api_storages_export_redis_delete
      summary: Delete export storage
      description: Delete a specific Redis export storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: Redis"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis export storage.
        required: true
        schema:
          type: integer
  "/api/storages/export/redis/{id}/sync":
    post:
      operationId: api_storages_export_redis_sync_create
      summary: Sync export storage
      description: Sync tasks from a specific Redis export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisExportStorage"
      tags:
        - "Storage: Redis"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export/s3:
    get:
      operationId: api_storages_export_s3_list
      summary: Get all export storage
      description: Get a list of all S3 export storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    post:
      operationId: api_storages_export_s3_create
      summary: Create export storage
      description: Create a new S3 export storage connection to store annotations.
      requestBody:
        $ref: "#/components/requestBodies/S3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    parameters: []
  /api/storages/export/s3/validate:
    post:
      operationId: api_storages_export_s3_validate_create
      summary: Validate export storage
      description: Validate a specific S3 export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    parameters: []
  "/api/storages/export/s3/{id}":
    get:
      operationId: api_storages_export_s3_read
      summary: Get export storage
      description: Get a specific S3 export storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    patch:
      operationId: api_storages_export_s3_partial_update
      summary: Update export storage
      description: Update a specific S3 export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ExportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    delete:
      operationId: api_storages_export_s3_delete
      summary: Delete export storage
      description: Delete a specific S3 export storage connection.
      responses:
        "204":
          description: ""
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 export storage.
        required: true
        schema:
          type: integer
  "/api/storages/export/s3/{id}/sync":
    post:
      operationId: api_storages_export_s3_sync_create
      summary: Sync export storage
      description: Sync tasks from an S3 export storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ExportStorage"
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export/s3s:
    get:
      operationId: api_storages_export_s3s_list
      summary: Get all export storage with IAM roles
      description: Get a list of all S3 export storage connections that were set up
        with IAM role access.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    post:
      operationId: api_storages_export_s3s_create
      summary: Create export storage with IAM roles
      description: Create an S3 export storage connection with IAM role access to
        store annotations.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters: []
  /api/storages/export/s3s/validate:
    post:
      operationId: api_storages_export_s3s_validate_create
      summary: Validate IAM role export storage
      description: Validate a specific S3 export storage connection that was set up
        with IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters: []
  "/api/storages/export/s3s/{id}":
    get:
      operationId: api_storages_export_s3s_read
      summary: Get IAM role export storage
      description: Get a specific S3 export storage connection that was set up with
        IAM role access.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    patch:
      operationId: api_storages_export_s3s_partial_update
      summary: Update IAM role export storage
      description: Update a specific S3 export storage connection that was set up with
        IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ExportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    delete:
      operationId: api_storages_export_s3s_delete
      summary: Delete IAM role export storage
      description: Delete a specific S3 export storage connection that was set up with
        IAM role access.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: S3 Roles"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this lse s3 export storage.
        required: true
        schema:
          type: integer
  "/api/storages/export/s3s/{id}/sync":
    post:
      operationId: api_storages_export_s3s_sync_create
      summary: Sync IAM role export storage
      description: Sync tasks from an S3 export storage.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ExportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ExportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/export/types:
    get:
      operationId: api_storages_export_types_list
      summary: List all export storages types
      description: Retrieve a list of the export storages types.
      responses:
        "200":
          description: "A list of export storages types {'name': name, 'title': title}."
      tags:
        - Storage
    parameters: []
  /api/storages/gcs/:
    get:
      operationId: api_storages_gcs_list
      summary: Get all import storage
      description: Get a list of all GCS import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    post:
      operationId: api_storages_gcs_create
      summary: Create import storage
      description: Create a new GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    parameters: []
  /api/storages/gcs/validate:
    post:
      operationId: api_storages_gcs_validate_create
      summary: Validate import storage
      description: Validate a specific GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    parameters: []
  "/api/storages/gcs/{id}":
    get:
      operationId: api_storages_gcs_read
      summary: Get import storage
      description: Get a specific GCS import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    patch:
      operationId: api_storages_gcs_partial_update
      summary: Update import storage
      description: Update a specific GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSImportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    delete:
      operationId: api_storages_gcs_delete
      summary: Delete import storage
      description: Delete a specific GCS import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs import storage.
        required: true
        schema:
          type: integer
  "/api/storages/gcs/{id}/sync":
    post:
      operationId: api_storages_gcs_sync_create
      summary: Sync import storage
      description: Sync tasks from an GCS import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/GCSImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCSImportStorage"
      tags:
        - "Storage: GCS"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/redis/:
    get:
      operationId: api_storages_redis_list
      summary: Get all import storage
      description: Get a list of all Redis import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    post:
      operationId: api_storages_redis_create
      summary: Create import storage
      description: Create a new Redis import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    parameters: []
  /api/storages/redis/validate:
    post:
      operationId: api_storages_redis_validate_create
      summary: Validate import storage
      description: Validate a specific Redis import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    parameters: []
  "/api/storages/redis/{id}":
    get:
      operationId: api_storages_redis_read
      summary: Get import storage
      description: Get a specific Redis import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    patch:
      operationId: api_storages_redis_partial_update
      summary: Update import storage
      description: Update a specific Redis import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisImportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    delete:
      operationId: api_storages_redis_delete
      summary: Delete import storage
      description: Delete a specific Redis import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: Redis"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis import storage.
        required: true
        schema:
          type: integer
  "/api/storages/redis/{id}/sync":
    post:
      operationId: api_storages_redis_sync_create
      summary: Sync import storage
      description: Sync tasks from a specific Redis import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/RedisImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedisImportStorage"
      tags:
        - "Storage: Redis"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/s3/:
    get:
      operationId: api_storages_s3_list
      summary: Get import storage
      description: Get a list of all S3 import storage connections.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    post:
      operationId: api_storages_s3_create
      summary: Create new storage
      description: Get new S3 import storage
      requestBody:
        $ref: "#/components/requestBodies/S3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    parameters: []
  /api/storages/s3/validate:
    post:
      operationId: api_storages_s3_validate_create
      summary: Validate import storage
      description: Validate a specific S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    parameters: []
  "/api/storages/s3/{id}":
    get:
      operationId: api_storages_s3_read
      summary: Get import storage
      description: Get a specific S3 import storage connection.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    patch:
      operationId: api_storages_s3_partial_update
      summary: Update import storage
      description: Update a specific S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ImportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    delete:
      operationId: api_storages_s3_delete
      summary: Delete import storage
      description: Delete a specific S3 import storage connection.
      responses:
        "204":
          description: ""
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 import storage.
        required: true
        schema:
          type: integer
  "/api/storages/s3/{id}/sync":
    post:
      operationId: api_storages_s3_sync_create
      summary: Sync import storage
      description: Sync tasks from an S3 import storage connection.
      requestBody:
        $ref: "#/components/requestBodies/S3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ImportStorage"
      tags:
        - Storage:S3
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/s3s/:
    get:
      operationId: api_storages_s3s_list
      summary: Get IAM role import storage
      description: Get list of all S3 import storage connections set up with IAM role
        access.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    post:
      operationId: api_storages_s3s_create
      summary: Create import storage with IAM roles
      description: Create S3 import storage with IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters: []
  /api/storages/s3s/validate:
    post:
      operationId: api_storages_s3s_validate_create
      summary: Validate IAM role import storage
      description: Validate a specific S3 import storage connection that was set up
        with IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters: []
  "/api/storages/s3s/{id}":
    get:
      operationId: api_storages_s3s_read
      summary: Get IAM role import storage
      description: Get a specific S3 import storage connection that was set up with
        IAM role access.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    patch:
      operationId: api_storages_s3s_partial_update
      summary: Update IAM role import storage
      description: Update a specific S3 import storage connection that was set up with
        IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ImportStorage"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    delete:
      operationId: api_storages_s3s_delete
      summary: Delete IAM role import storage
      description: Delete a specific S3 import storage connection that was set up with
        IAM role access.
      responses:
        "204":
          description: ""
      tags:
        - "Storage: S3 Roles"
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this lse s3 import storage.
        required: true
        schema:
          type: integer
  "/api/storages/s3s/{id}/sync":
    post:
      operationId: api_storages_s3s_sync_create
      summary: Sync IAM role import storage
      description: Sync tasks from an S3 import storage connection that was set up
        with IAM role access.
      requestBody:
        $ref: "#/components/requestBodies/LseS3ImportStorage"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseS3ImportStorage"
      tags:
        - "Storage: S3 Roles"
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/storages/types:
    get:
      operationId: api_storages_types_list
      summary: List all import storages types
      description: Retrieve a list of the import storages types.
      responses:
        "200":
          description: "A list of import storages types {'name': name, 'title': title}."
      tags:
        - Storage
    parameters: []
  /api/tasks/:
    get:
      operationId: api_tasks_list
      summary: Get tasks list
      description: >
        
        Retrieve a list of tasks with pagination for a specific view or project, by using filters and ordering.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: view
          in: query
          description: View ID
          schema:
            type: integer
        - name: project
          in: query
          description: Project ID
          schema:
            type: integer
        - name: resolve_uri
          in: query
          description: Resolve task data URIs using Cloud Storage
          schema:
            type: boolean
      responses:
        "200":
          description: Tasks list
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    description: List of tasks
                    type: array
                    items:
                      description: Task object
                      type: object
                  total:
                    description: Total number of tasks
                    type: integer
                  total_annotations:
                    description: Total number of annotations
                    type: integer
                  total_predictions:
                    description: Total number of predictions
                    type: integer
      tags:
        - Tasks
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: list
      x-fern-pagination:
        offset: $request.page
        results: $response.tasks
    post:
      operationId: api_tasks_create
      summary: Create task
      description: Create a new labeling task in Label Studio.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LseTask"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseTask"
      tags:
        - Tasks
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: create
    parameters: []
  "/api/tasks/{id}/":
    get:
      operationId: api_tasks_read
      summary: Get task
      description: >
        
        Get task data, metadata, annotations and other attributes for a specific labeling task by task ID.
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/data_manager_task_serializer"
      tags:
        - Tasks
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: get
    patch:
      operationId: api_tasks_partial_update
      summary: Update task
      description: Update the attributes of an existing labeling task.
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskSimple"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskSimple"
      tags:
        - Tasks
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: update
    delete:
      operationId: api_tasks_delete
      summary: Delete task
      description: Delete a task in Label Studio. This action cannot be undone!
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - Tasks
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: delete
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/api/tasks/{id}/annotations/":
    get:
      operationId: api_tasks_annotations_list
      summary: Get all task annotations
      description: List all annotations for a task.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Annotation"
      tags:
        - Annotations
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: list
    post:
      operationId: api_tasks_annotations_create
      summary: Create annotation
      description: >
        
        Add annotations to a task like an annotator does. The content of the result field depends on your 

        labeling configuration. For example, send the following data as part of your POST 

        request to send an empty annotation with the ID of the user who completed the task:


        ```json

        {

        "result": {},

        "was_cancelled": true,

        "ground_truth": true,

        "lead_time": 0,

        "task": 0

        "completed_by": 123

        } 

        ```
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Annotation"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
      tags:
        - Annotations
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: create
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/users/:
    get:
      operationId: api_users_list
      summary: List users
      description: List the users that exist on the Label Studio server.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LseUser"
      tags:
        - Users
    post:
      operationId: api_users_create
      summary: Create new user
      description: Create a user in Label Studio.
      requestBody:
        $ref: "#/components/requestBodies/LseUser"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseUser"
      tags:
        - Users
    parameters: []
  "/api/users/{id}/":
    get:
      operationId: api_users_read
      summary: Get user info
      description: Get info about a specific Label Studio user, based on the user ID.
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseUser"
      tags:
        - Users
    patch:
      operationId: api_users_partial_update
      summary: Update user details
      description: >
        
        Update details for a specific user, such as their name or contact information, in Label Studio.
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/LseUser"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LseUser"
      tags:
        - Users
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/webhooks/:
    get:
      operationId: api_webhooks_list
      summary: List all webhooks
      description: List all webhooks set up for your organization.
      parameters:
        - name: project
          in: query
          description: Project ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Webhook"
      tags:
        - Webhooks
    post:
      operationId: api_webhooks_create
      summary: Create a webhook
      description: Create a webhook for your organization.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
      tags:
        - Webhooks
    parameters: []
  /api/webhooks/info/:
    get:
      operationId: api_webhooks_info_list
      summary: Get all webhook actions
      description: Get descriptions of all available webhook actions to set up webhooks.
      parameters:
        - name: organization-only
          in: query
          description: organization-only or not
          schema:
            type: boolean
      responses:
        "200":
          description: Object with description data.
      tags:
        - Webhooks
    parameters: []
  "/api/webhooks/{id}/":
    get:
      operationId: api_webhooks_read
      summary: Get webhook info
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
      tags:
        - Webhooks
    put:
      operationId: api_webhooks_update
      summary: Save webhook info
      description: ""
      parameters:
        - name: url
          in: query
          description: URL of webhook
          required: true
          schema:
            type: string
            format: uri
            minLength: 1
            maxLength: 2048
        - name: send_payload
          in: query
          description: If value is False send only action
          required: false
          schema:
            type: boolean
        - name: send_for_all_actions
          in: query
          description: If value is False - used only for actions from WebhookAction
          required: false
          schema:
            type: boolean
        - name: headers
          in: query
          description: Key Value Json of headers
          required: false
          schema:
            type: string
        - name: is_active
          in: query
          description: If value is False the webhook is disabled
          required: false
          schema:
            type: boolean
        - name: actions
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PROJECT_CREATED
                - PROJECT_UPDATED
                - PROJECT_DELETED
                - TASKS_CREATED
                - TASKS_DELETED
                - ANNOTATION_CREATED
                - ANNOTATIONS_CREATED
                - ANNOTATION_UPDATED
                - ANNOTATIONS_DELETED
                - LABEL_LINK_CREATED
                - LABEL_LINK_UPDATED
                - LABEL_LINK_DELETED
                - REVIEW_CREATED
                - REVIEW_UPDATED
                - REVIEWS_DELETED
            default: []
      requestBody:
        $ref: "#/components/requestBodies/WebhookSerializerForUpdate"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSerializerForUpdate"
      tags:
        - Webhooks
    patch:
      operationId: api_webhooks_partial_update
      summary: Update webhook info
      description: ""
      parameters:
        - name: url
          in: query
          description: URL of webhook
          required: true
          schema:
            type: string
            format: uri
            minLength: 1
            maxLength: 2048
        - name: send_payload
          in: query
          description: If value is False send only action
          required: false
          schema:
            type: boolean
        - name: send_for_all_actions
          in: query
          description: If value is False - used only for actions from WebhookAction
          required: false
          schema:
            type: boolean
        - name: headers
          in: query
          description: Key Value Json of headers
          required: false
          schema:
            type: string
        - name: is_active
          in: query
          description: If value is False the webhook is disabled
          required: false
          schema:
            type: boolean
        - name: actions
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PROJECT_CREATED
                - PROJECT_UPDATED
                - PROJECT_DELETED
                - TASKS_CREATED
                - TASKS_DELETED
                - ANNOTATION_CREATED
                - ANNOTATIONS_CREATED
                - ANNOTATION_UPDATED
                - ANNOTATIONS_DELETED
                - LABEL_LINK_CREATED
                - LABEL_LINK_UPDATED
                - LABEL_LINK_DELETED
                - REVIEW_CREATED
                - REVIEW_UPDATED
                - REVIEWS_DELETED
            default: []
      requestBody:
        $ref: "#/components/requestBodies/WebhookSerializerForUpdate"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSerializerForUpdate"
      tags:
        - Webhooks
    delete:
      operationId: api_webhooks_delete
      summary: Delete webhook info
      description: ""
      responses:
        "204":
          description: ""
      tags:
        - Webhooks
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this webhook.
        required: true
        schema:
          type: integer
  /api/workspaces/:
    get:
      operationId: api_workspaces_list
      summary: Get all workspaces
      description: Get all workspaces for specified organization.
      parameters:
        - name: is_personal
          in: query
          description: Workspace is a personal user workspace.
          schema:
            type: boolean
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Workspace"
      tags:
        - Workspaces
    post:
      operationId: api_workspaces_create
      summary: Create workspace
      description: Create a workspace.
      requestBody:
        $ref: "#/components/requestBodies/Workspace"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
      tags:
        - Workspaces
    parameters: []
  "/api/workspaces/{id}/":
    get:
      operationId: api_workspaces_read
      summary: Get workspace
      description: Retrieve details for a specific workspace by ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
      tags:
        - Workspaces
    patch:
      operationId: api_workspaces_partial_update
      summary: Update workspace
      description: Update settings for a specific workspace by ID.
      requestBody:
        $ref: "#/components/requestBodies/Workspace"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
      tags:
        - Workspaces
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this workspace.
        required: true
        schema:
          type: integer
  "/api/workspaces/{id}/memberships/":
    post:
      operationId: api_workspaces_post
      summary: Add workspace member
      description: Add a new workspace member by user ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkspaceMemberCreate"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMemberCreate"
      tags:
        - Workspaces
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this workspace.
        required: true
        schema:
          type: integer
  "/api/workspaces/{id}/projects/":
    get:
      operationId: api_workspaces_projects_read
      summary: List workspace projects
      description: Retrieve a list of all projects in a specific workspace.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
      tags:
        - Workspaces
    post:
      operationId: api_workspaces_projects_create
      summary: Create workspace project
      description: Create a project in a specific workspace.
      requestBody:
        $ref: "#/components/requestBodies/Project"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
      tags:
        - Workspaces
    delete:
      operationId: api_workspaces_projects_delete
      summary: Remove workspace projects
      description: Delete projects from a specific workspace.
      responses:
        "204":
          description: ""
      tags:
        - Workspaces
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this workspace.
        required: true
        schema:
          type: integer
  /data/local-files/:
    get:
      operationId: data_local-files_list
      description: Serving files for LocalFilesImportStorage
      responses:
        "200":
          description: ""
      tags:
        - data
    parameters: []
servers:
  - url: https://app.heartex.com
components:
  requestBodies:
    GCSDatasetStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GCSDatasetStorage"
      required: true
    WebhookSerializerForUpdate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhookSerializerForUpdate"
      required: true
    LseS3ExportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LseS3ExportStorage"
      required: true
    GCSExportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GCSExportStorage"
      required: true
    RedisExportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RedisExportStorage"
      required: true
    AzureBlobImportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AzureBlobImportStorage"
      required: true
    View:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/View"
      required: true
    LabelLink:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LabelLink"
      required: true
    ModelProviderConnection:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ModelProviderConnection"
      required: true
    S3ImportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/S3ImportStorage"
      required: true
    ThirdPartyModelVersion:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThirdPartyModelVersion"
      required: true
    AnnotationReview:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AnnotationReview"
      required: true
    Workspace:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Workspace"
      required: true
    Prediction:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Prediction"
      required: true
    Annotation:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Annotation"
      required: true
    DatasetView:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DatasetView"
      required: true
    Dataset:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Dataset"
      required: true
    Comment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Comment"
      required: true
    AzureDatasetStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AzureDatasetStorage"
      required: true
    S3DatasetStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/S3DatasetStorage"
      required: true
    SendInvite:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SendInvite"
      required: true
    ModelInterface:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ModelInterface"
      required: true
    OrganizationMember:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrganizationMember"
      required: true
    ProjectTemplate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProjectTemplate"
      required: true
    ProjectLabelConfig:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProjectLabelConfig"
      required: true
    Project:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Project"
      required: true
    TaskAssignment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TaskAssignment"
      required: true
    AzureBlobExportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AzureBlobExportStorage"
      required: true
    S3ExportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/S3ExportStorage"
      required: true
    GCSImportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GCSImportStorage"
      required: true
    RedisImportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RedisImportStorage"
      required: true
    LseS3ImportStorage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LseS3ImportStorage"
      required: true
    LseUser:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LseUser"
      required: true
  securitySchemes:
    Token:
      type: apiKey
      name: Authorization
      in: header
      description: 'The token (or API key) must be passed as a request header. You can
        find your user token on the User Account page in Label Studio. Example:
        <br><pre><code class="language-bash">curl
        https://label-studio-host/api/projects -H "Authorization: Token
        [your-token]"</code></pre>'
  schemas:
    AnnotationHistory:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        comment:
          title: Comment
          type: string
          readOnly: true
          nullable: true
        organization_id:
          title: Organization_id
          description: Organization for this annotation history
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        project_id:
          title: Project_id
          description: Project for this annotation history
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        annotation_id:
          title: Annotation_id
          description: Corresponding annotation for this historical annotation
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        draft_id:
          title: Draft_id
          description: Corresponding draft for this historical annotation
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        review_id:
          title: Review_id
          description: AnnotationReview ID, using with review field
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        task_id:
          title: Task_id
          description: Task id
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        result:
          title: Result
          description: Labeling result
          type: object
          nullable: true
        action:
          title: Action
          type: string
          enum:
            - prediction
            - propagated_annotation
            - imported
            - submitted
            - updated
            - skipped
            - accepted
            - rejected
            - fixed_and_accepted
            - deleted_review
          nullable: true
        created_at:
          title: Created_at
          type: string
          format: date-time
          readOnly: true
        created_by:
          title: Created_by
          description: Created by user id
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        comment_id:
          title: Comment_id
          description: Comment id sent with result
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    AnnotationReview:
      required:
        - annotation
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          title: Created by
          description: User who made this review
          type: integer
          readOnly: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        accepted:
          title: Accepted
          description: Accepted or rejected (if false) flag
          type: boolean
        result:
          title: Result
          type: object
          nullable: true
        annotation:
          title: Annotation
          description: Corresponding annotation
          type: integer
        fixed_annotation_history:
          title: Fixed annotation history
          description: Fixed annotation history item by the reviewer
          type: integer
          readOnly: true
          nullable: true
        previous_annotation_history:
          title: Previous annotation history
          description: Previous annotation history item by the annotator
          type: integer
          readOnly: true
          nullable: true
        last_annotation_history:
          title: Last annotation history
          type: integer
          nullable: true
        comment:
          title: Comment
          type: string
          minLength: 1
          nullable: true
    Annotation:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_username:
          title: Created username
          description: Username string
          type: string
          readOnly: true
        created_ago:
          title: Created ago
          description: Time delta from creation time
          type: string
          readOnly: true
          default: ""
          minLength: 1
        completed_by:
          title: Completed by
          type: integer
        unique_id:
          title: Unique id
          type: string
          minLength: 1
        result:
          title: Result
          description: The main value of annotator work - labeling result in JSON format
          type: object
          nullable: true
        was_cancelled:
          title: Was cancelled
          description: User skipped the task
          type: boolean
        ground_truth:
          title: Ground_truth
          description: This annotation is a Ground Truth (ground_truth)
          type: boolean
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last updated time
          type: string
          format: date-time
          readOnly: true
        draft_created_at:
          title: Draft created at
          description: Draft creation time
          type: string
          format: date-time
          nullable: true
        lead_time:
          title: Lead time
          description: How much time it took to annotate the task
          type: number
          nullable: true
        import_id:
          title: Import id
          description: Original annotation ID that was at the import step or NULL if this
            annotation wasn't imported
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          nullable: true
        last_action:
          title: Last action
          description: Action which was performed in the last annotation history item
          type: string
          enum:
            - prediction
            - propagated_annotation
            - imported
            - submitted
            - updated
            - skipped
            - accepted
            - rejected
            - fixed_and_accepted
            - deleted_review
          nullable: true
        task:
          title: Task
          description: Corresponding task for this annotation
          type: integer
          nullable: true
        project:
          title: Project
          description: Project ID for this annotation
          type: integer
          nullable: true
        updated_by:
          title: Updated by
          description: Last user who updated this annotation
          type: integer
          nullable: true
        parent_prediction:
          title: Parent prediction
          description: Points to the prediction from which this annotation was created
          type: integer
          nullable: true
        parent_annotation:
          title: Parent annotation
          description: Points to the parent annotation from which this annotation was
            created
          type: integer
          nullable: true
        last_created_by:
          title: Last created by
          description: User who created the last annotation history item
          type: integer
          nullable: true
    Comment:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        text:
          title: Text
          description: Reviewer or annotator comment
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last updated time
          type: string
          format: date-time
          readOnly: true
        is_resolved:
          title: Is_resolved
          description: True if the comment is resolved
          type: boolean
        resolved_at:
          title: Resolved at
          description: Resolving time
          type: string
          format: date-time
          readOnly: true
          nullable: true
        project:
          title: Project
          type: integer
          readOnly: true
          nullable: true
        task:
          title: Task
          type: integer
          readOnly: true
          nullable: true
        draft:
          title: Draft
          type: integer
          nullable: true
        annotation:
          title: Annotation
          type: integer
          nullable: true
        created_by:
          title: Created by
          description: User who made this comment
          type: integer
          readOnly: true
    OrganizationMembership:
      required:
        - role
      type: object
      properties:
        role:
          title: Role
          type: string
          minLength: 1
        active:
          title: Active
          type: string
          readOnly: true
        organization_id:
          title: Organization id
          type: string
          readOnly: true
    LseFields:
      type: object
      properties:
        invite_expired:
          title: Invite expired
          type: string
          readOnly: true
        invite_expired_at:
          title: Invite expired at
          type: string
          readOnly: true
        invited_at:
          title: Invited at
          type: string
          format: date-time
          nullable: true
        invite_activated:
          title: Invite activated
          type: boolean
          nullable: true
        trial_company:
          title: Trial company
          type: string
          maxLength: 1000
          nullable: true
        trial_role:
          title: Trial role
          type: string
          enum:
            - annotator
            - annotator_team_manager
            - business_analyst
            - business_or_data_team_leadership
            - data_engineer_platform_engineer
            - data_scientist
            - other
          nullable: true
        trial_models_in_production:
          title: Trial models in production
          type: string
          maxLength: 1000
          nullable: true
        trial_experience_labeling:
          title: Trial experience labeling
          type: string
          maxLength: 1000
          nullable: true
        trial_license_enterprise:
          title: Trial license enterprise
          type: boolean
          nullable: true
        social_auth_finished:
          title: Social auth finished
          description: Is user finished social authentication
          type: boolean
          nullable: true
        invited_by:
          title: Invited by
          type: integer
          nullable: true
    LseUser:
      required:
        - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        first_name:
          title: First name
          type: string
          maxLength: 256
        last_name:
          title: Last name
          type: string
          maxLength: 256
        username:
          title: Username
          type: string
          maxLength: 256
          minLength: 1
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
        last_activity:
          title: Last activity
          type: string
          format: date-time
          readOnly: true
        avatar:
          title: Avatar
          type: string
          readOnly: true
        initials:
          title: Initials
          type: string
          readOnly: true
        phone:
          title: Phone
          type: string
          maxLength: 256
        active_organization:
          title: Active organization
          type: integer
          nullable: true
        allow_newsletters:
          title: Allow newsletters
          description: Allow sending newsletters to user
          type: boolean
          nullable: true
        org_membership:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationMembership"
          readOnly: true
        password:
          title: Password
          type: string
          minLength: 1
        lse_fields:
          $ref: "#/components/schemas/LseFields"
    AzureDatasetStorage:
      required:
        - dataset
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: azure
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        container:
          title: Container
          description: Azure blob container
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: Azure blob prefix name
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        account_name:
          title: Account_name
          description: Azure Blob account name
          type: string
          nullable: true
        account_key:
          title: Account_key
          description: Azure Blob account key
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        glob_pattern:
          title: Glob_pattern
          description: Glob pattern for syncing from bucket
          type: string
          nullable: true
        synced:
          title: Synced
          description: Flag if dataset has been previously synced or not
          type: boolean
        job_id:
          title: The Job ID for the GCP Dataproc job that will import the records of this
            dataset into the vector db
          type: string
          readOnly: true
          minLength: 1
          nullable: true
        dataset:
          title: Dataset
          description: A unique integer value identifying this dataset.
          type: integer
    GCSDatasetStorage:
      required:
        - dataset
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        bucket:
          title: Bucket
          description: GCS bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: GCS bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        google_application_credentials:
          title: Google_application_credentials
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
          type: string
          nullable: true
        google_project_id:
          title: Google Project ID
          description: Google project ID
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        glob_pattern:
          title: Glob_pattern
          description: Glob pattern for syncing from bucket
          type: string
          nullable: true
        synced:
          title: Synced
          description: Flag if dataset has been previously synced or not
          type: boolean
        job_id:
          title: The Job ID for the GCP Dataproc job that will import the records of this
            dataset into the vector db
          type: string
          readOnly: true
          minLength: 1
          nullable: true
        dataset:
          title: Dataset
          description: A unique integer value identifying this dataset.
          type: integer
    S3DatasetStorage:
      required:
        - dataset
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        bucket:
          title: Bucket
          description: S3 bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: S3 bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        aws_access_key_id:
          title: Aws_access_key_id
          description: AWS_ACCESS_KEY_ID
          type: string
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          description: AWS_SECRET_ACCESS_KEY
          type: string
          nullable: true
        aws_session_token:
          title: Aws_session_token
          description: AWS_SESSION_TOKEN
          type: string
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          description: AWS SSE KMS Key ID
          type: string
          nullable: true
        region_name:
          title: Region_name
          description: AWS Region
          type: string
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          description: S3 Endpoint
          type: string
          nullable: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        recursive_scan:
          title: Recursive scan
          description: Perform recursive scan over the bucket content
          type: boolean
        glob_pattern:
          title: Glob_pattern
          description: Glob pattern for syncing from bucket
          type: string
          nullable: true
        synced:
          title: Synced
          description: Flag if dataset has been previously synced or not
          type: boolean
        job_id:
          title: The Job ID for the GCP Dataproc job that will import the records of this
            dataset into the vector db
          type: string
          readOnly: true
          minLength: 1
          nullable: true
        dataset:
          title: Dataset
          description: A unique integer value identifying this dataset.
          type: integer
    UserSimple:
      description: User who created Dataset
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        first_name:
          title: First name
          type: string
          maxLength: 256
        last_name:
          title: Last name
          type: string
          maxLength: 256
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
        avatar:
          title: Avatar
          type: string
          readOnly: true
    Dataset:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last updated time
          type: string
          format: date-time
          readOnly: true
        title:
          title: Title
          description: Dataset title
          type: string
          maxLength: 1000
          minLength: 1
        description:
          title: Description
          description: Dataset description
          type: string
          nullable: true
        columns:
          title: Columns
          description: All data columns found in Dataset tasks
          type: object
          nullable: true
        total_entities:
          title: The number of entities in the dataset
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        vector_db_dataset_name:
          title: Vector_db_dataset_name
          description: Dataset name for weaviate schema
          type: string
          maxLength: 37
          minLength: 1
        organization:
          title: Organization
          type: integer
          nullable: true
    Filter:
      required:
        - column
        - type
        - operator
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        index:
          title: Index
          description: To keep filter order
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        column:
          title: Column
          description: Field name
          type: string
          maxLength: 1024
          minLength: 1
        type:
          title: Type
          description: Field type
          type: string
          maxLength: 1024
          minLength: 1
        operator:
          title: Operator
          description: Filter operator
          type: string
          maxLength: 1024
          minLength: 1
        value:
          title: Value
          description: Filter value
          type: object
          nullable: true
    FilterGroup:
      required:
        - filters
        - conjunction
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        filters:
          type: array
          items:
            $ref: "#/components/schemas/Filter"
        conjunction:
          title: Conjunction
          description: Type of conjunction
          type: string
          maxLength: 1024
          minLength: 1
    DatasetView:
      required:
        - dataset
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        filter_group:
          $ref: "#/components/schemas/FilterGroup"
        data:
          title: Data
          description: Custom view data
          type: object
          nullable: true
        ordering:
          title: Ordering
          description: Ordering parameters
          type: object
          nullable: true
        selected_items:
          title: Selected items
          description: Selected items
          type: object
          nullable: true
        user:
          title: User
          description: User who made this view
          type: integer
          nullable: true
        dataset:
          title: Dataset
          description: Dataset ID
          type: integer
    DatasetViewReset:
      required:
        - dataset
      type: object
      properties:
        dataset:
          title: Dataset
          type: integer
    DatasetMember:
      required:
        - user
      type: object
      properties:
        user:
          title: User
          type: integer
    View:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        filter_group:
          $ref: "#/components/schemas/FilterGroup"
        data:
          title: Data
          description: Custom view data
          type: object
          nullable: true
        ordering:
          title: Ordering
          description: Ordering parameters
          type: object
          nullable: true
        selected_items:
          title: Selected items
          description: Selected items
          type: object
          nullable: true
        user:
          title: User
          description: User who made this view
          type: integer
          nullable: true
        project:
          title: Project
          description: Project ID
          type: integer
    ViewReset:
      required:
        - project
      type: object
      properties:
        project:
          title: Project
          type: integer
    FileUpload:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        file:
          title: File
          type: string
          readOnly: true
    OrganizationInvite:
      type: object
      properties:
        token:
          title: Token
          type: string
          minLength: 1
        invite_url:
          title: Invite url
          type: string
          minLength: 1
    SendInvite:
      required:
        - emails
        - role
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
            minLength: 1
        role:
          title: Role
          type: string
          minLength: 1
    LabelLink:
      required:
        - from_name
        - project
        - label
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        annotations_count:
          title: Annotations count
          type: integer
          readOnly: true
        from_name:
          title: Tag name
          description: Tag name
          type: string
          maxLength: 2048
          minLength: 1
        project:
          title: Project
          type: integer
        label:
          title: Label
          type: integer
    Label:
      required:
        - value
        - title
        - created_by
        - organization
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        links:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
        created_at:
          title: Created at
          description: Time of label creation
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Time of label modification
          type: string
          format: date-time
          readOnly: true
        value:
          title: Value
          description: Label value
          type: object
        title:
          title: Title
          description: Label title
          type: string
          maxLength: 2048
          minLength: 1
        description:
          title: Description
          description: Label description
          type: string
          nullable: true
        approved:
          title: Approved
          description: Status of label
          type: boolean
        created_by:
          title: Created by
          description: User who made this label
          type: integer
        approved_by:
          title: Approved by
          description: User who approved this label
          type: integer
          nullable: true
        organization:
          title: Organization
          type: integer
        projects:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
    LabelCreate:
      required:
        - project
        - from_name
        - value
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          title: Created by
          type: integer
        organization:
          title: Organization
          type: integer
        project:
          title: Project
          type: integer
        from_name:
          title: From name
          type: string
          minLength: 1
        created_at:
          title: Created at
          description: Time of label creation
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Time of label modification
          type: string
          format: date-time
          readOnly: true
        value:
          title: Value
          description: Label value
          type: object
        title:
          title: Title
          description: Label title
          type: string
          maxLength: 2048
          minLength: 1
        description:
          title: Description
          description: Label description
          type: string
          nullable: true
        approved:
          title: Approved
          description: Status of label
          type: boolean
        approved_by:
          title: Approved by
          description: User who approved this label
          type: integer
          nullable: true
        projects:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
    MLBackend:
      required:
        - url
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        state:
          title: State
          type: string
          enum:
            - CO
            - DI
            - ER
            - TR
            - PR
        readable_state:
          title: Readable state
          type: string
          readOnly: true
        is_interactive:
          title: Is_interactive
          description: Used to interactively annotate tasks. If true, model returns one
            list with results
          type: boolean
        url:
          title: Url
          description: URL for the machine learning model server
          type: string
          minLength: 1
        error_message:
          title: Error_message
          description: Error message in error state
          type: string
          nullable: true
        title:
          title: Title
          description: Name of the machine learning backend
          type: string
          nullable: true
        auth_method:
          title: Auth method
          type: string
          enum:
            - NONE
            - BASIC_AUTH
        basic_auth_user:
          title: Basic auth user
          description: HTTP Basic Auth user
          type: string
          nullable: true
        basic_auth_pass:
          title: Basic auth pass
          type: string
          nullable: true
        basic_auth_pass_is_set:
          title: Basic auth pass is set
          type: string
          readOnly: true
        description:
          title: Description
          description: Description for the machine learning backend
          type: string
          nullable: true
        extra_params:
          title: Extra params
          description: Any extra parameters passed to the ML Backend during the setup
          type: object
          nullable: true
        model_version:
          title: Model version
          description: Current model version associated with this machine learning backend
          type: string
          nullable: true
        timeout:
          title: Timeout
          description: Response model timeout
          type: number
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        auto_update:
          title: Auto_update
          description: If false, model version is set by the user, if true - getting
            latest version from backend.
          type: boolean
        project:
          title: Project
          type: integer
    MLInteractiveAnnotatingRequest:
      required:
        - task
      type: object
      properties:
        task:
          title: Task
          description: ID of task to annotate
          type: integer
        context:
          title: Context
          description: Context for ML model
          type: object
          nullable: true
    ModelProviderConnection:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        provider:
          title: Provider
          type: string
          enum:
            - OpenAI
        api_key:
          title: Api_key
          description: Model provider API key
          type: string
          nullable: true
        scope:
          title: Scope
          type: string
          enum:
            - Organization
            - User
            - Model
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        organization:
          title: Organization
          type: integer
          nullable: true
    ModelRun:
      required:
        - project
        - model_version
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        project_subset:
          title: Project subset
          type: string
          enum:
            - All
            - HasGT
        status:
          title: Status
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Failed
            - Canceled
          readOnly: true
        job_id:
          title: Job id
          description: Job ID for inference job for a ModelRun e.g. Adala job ID
          type: string
          maxLength: 255
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        triggered_at:
          title: Triggered at
          type: string
          format: date-time
          readOnly: true
          nullable: true
        predictions_updated_at:
          title: Predictions updated at
          type: string
          format: date-time
          nullable: true
        completed_at:
          title: Completed at
          type: string
          format: date-time
          readOnly: true
          nullable: true
        organization:
          title: Organization
          type: integer
          nullable: true
        project:
          title: Project
          type: integer
        model_version:
          title: Model version
          type: integer
        created_by:
          title: Created by
          type: integer
          readOnly: true
          nullable: true
    BatchPredictions:
      required:
        - job_id
        - results
      type: object
      properties:
        job_id:
          title: Job id
          type: string
          maxLength: 255
          minLength: 1
        results:
          type: array
          items:
            type: string
            nullable: true
    ThirdPartyModelVersion:
      required:
        - title
        - prompt
        - provider_model_id
        - parent_model
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        title:
          title: Title
          description: Model name
          type: string
          maxLength: 500
          minLength: 1
        prompt:
          title: Prompt
          description: Prompt to execute
          type: string
          minLength: 1
        provider:
          title: Provider
          description: The model provider to use e.g. OpenAI
          type: string
          enum:
            - OpenAI
        provider_model_id:
          title: Provider model id
          description: The model ID to use within the given provider, e.g. gpt-3.5
          type: string
          maxLength: 255
          minLength: 1
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        parent_model:
          title: Parent model
          type: integer
        organization:
          title: Organization
          type: integer
          nullable: true
    ModelInterface:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        title:
          title: Title
          description: Model name
          type: string
          maxLength: 500
          minLength: 1
        description:
          title: Description
          description: Model description
          type: string
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        input_fields:
          title: Input fields
          type: object
        output_classes:
          title: Output classes
          type: object
        organization:
          title: Organization
          type: integer
          nullable: true
        associated_projects:
          type: array
          items:
            type: integer
          uniqueItems: true
    ModelInterfaceCreate:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        title:
          title: Title
          description: Model name
          type: string
          maxLength: 500
          minLength: 1
        description:
          title: Description
          description: Model description
          type: string
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        input_fields:
          title: Input fields
          type: object
        output_classes:
          title: Output classes
          type: object
        organization:
          title: Organization
          type: integer
          nullable: true
        associated_projects:
          type: array
          items:
            type: integer
          uniqueItems: true
    OrganizationId:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Organization title
          type: string
          maxLength: 1000
          minLength: 1
        contact_info:
          title: Contact info
          type: string
          format: email
          maxLength: 254
          nullable: true
    Organization:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Organization title
          type: string
          maxLength: 1000
          minLength: 1
        token:
          title: Token
          type: string
          maxLength: 256
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        contact_info:
          title: Contact info
          type: string
          format: email
          maxLength: 254
          nullable: true
        created_by:
          title: Created_by
          type: integer
          nullable: true
        users:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
    OrganizationMember:
      required:
        - user_id
        - role
      type: object
      properties:
        user_id:
          title: User id
          type: integer
        role:
          title: Role
          type: string
          enum:
            - OW
            - AD
            - MA
            - RE
            - AN
            - DI
            - NO
    DefaultRole:
      required:
        - organization
      type: object
      properties:
        organization:
          title: Organization
          description: A unique integer value identifying this organization.
          type: integer
        default_role:
          title: Default role
          description: Default membership role for invited users
          type: string
          enum:
            - OW
            - AD
            - MA
            - RE
            - AN
            - DI
            - NO
        external_id:
          title: External id
          description: External ID to uniquely identify this organization
          type: string
          nullable: true
        extra_data_on_activity_logs:
          title: Extra data on activity logs
          type: boolean
        custom_scripts_enabled_at:
          title: Custom scripts enabled at
          description: Set to current time to enabled custom scripts for this
            organization. Can only be enabled if no organization members are
            active members of any other organizations; otherwise an error will
            be raised. If this occurs, contact the LEAP team for assistance with
            enabling custom scripts.
          type: string
          format: date-time
          nullable: true
    Prediction:
      required:
        - task
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        model_version:
          title: Model version
          type: string
        created_ago:
          title: Created ago
          description: Delta time from creation time
          type: string
          readOnly: true
          default: ""
          minLength: 1
        result:
          title: Result
          description: Prediction result
          type: object
          nullable: true
        score:
          title: Score
          description: Prediction score
          type: number
          nullable: true
        cluster:
          title: Cluster
          description: Cluster for the current prediction
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        neighbors:
          title: Neighbors
          description: Array of task IDs of the closest neighbors
          type: object
          nullable: true
        mislabeling:
          title: Mislabeling
          description: Related task mislabeling score
          type: number
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        model:
          title: Model
          description: An ML Backend instance that created the prediction.
          type: integer
          nullable: true
        model_run:
          title: Model run
          description: A run of a ModelVersion that created the prediction.
          type: integer
          nullable: true
        task:
          title: Task
          type: integer
        project:
          title: Project
          type: integer
          nullable: true
    ProjectTemplate:
      required:
        - name
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        name:
          title: Name
          type: string
          maxLength: 1000
          minLength: 1
        description:
          title: Description
          type: string
          minLength: 1
          nullable: true
        tags:
          title: Tags
          type: object
        project_settings:
          title: Project settings
          description: general dict serialized project settings
          type: object
        review_settings:
          title: Review settings
          description: general dict serialized review settings
          type: object
        assignment_settings:
          title: Assignment settings
          description: general dict serialized assignment settings
          type: object
        require_comment_on_skip:
          title: Require comment on skip
          description: flag to require comment on skip
          type: boolean
        custom_script:
          title: Custom script
          description: custom script for projects created from this template
          type: string
          minLength: 1
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        created_by:
          title: Created by
          type: integer
          nullable: true
        organization:
          title: Organization
          type: integer
          nullable: true
    ProjectMemberWithUser:
      type: object
      properties:
        user:
          title: User
          type: string
          readOnly: true
    ReviewSettings:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        review_criteria:
          title: Review criteria
          description: Criteria to mark task as reviewed
          type: string
          enum:
            - all
            - one
          nullable: true
        anonymize_annotations:
          title: Anonymize_annotations
          description: Hide annotator names from annotations while review
          type: boolean
        only_finished_tasks:
          title: Only_finished_tasks
          description: Show only finished tasks in the review stream
          type: boolean
        instruction:
          title: Instruction
          description: Reviewer instructions in HTML format
          type: string
          nullable: true
        show_instruction:
          title: Show instruction
          description: Show instructions to the reviewers before they start
          type: boolean
        show_data_manager_to_reviewers:
          title: Show data manager to reviewers
          description: Show the data manager to reviewers
          type: boolean
        show_agreement_to_reviewers:
          title: Show agreement to reviewers
          description: Show the agreement column to reviewers
          type: boolean
        require_comment_on_reject:
          title: Require comment on reject
          description: If set, the reviewer must leave a comment on reject
          type: boolean
        requeue_rejected_tasks_to_annotator:
          title: Requeue rejected tasks to annotator
          description: If set, the rejected task is requeued to the annotator
          type: boolean
        review_only_manual_assignments:
          title: Review only manual assignments
          description: When set True, review queue is built only from manually assigned
            tasks
          type: boolean
        project:
          title: Project
          type: integer
          nullable: true
    AssignmentSettings:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        label_stream_task_distribution:
          title: Label stream task distribution
          description: Modes for distributing tasks to annotators
          type: string
          enum:
            - auto_distribution
            - assigned_only
          nullable: true
        project:
          title: Project
          type: integer
          nullable: true
    AllRolesProjectList:
      required:
        - members
        - review_settings
        - assignment_settings
      type: object
      properties:
        description:
          title: Description
          description: Project description
          type: string
          nullable: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/ProjectMemberWithUser"
        parsed_label_config:
          title: Parsed label config
          description: JSON-formatted labeling configuration
          type: object
          readOnly: true
        config_has_control_tags:
          title: Config has control tags
          description: Flag to detect is project ready for labeling
          type: string
          readOnly: true
        review_settings:
          $ref: "#/components/schemas/ReviewSettings"
        workspace:
          title: Workspace
          type: string
          readOnly: true
        label_config:
          title: Label config
          description: Label config in XML format. See more about it in documentation
          type: string
          nullable: true
        assignment_settings:
          $ref: "#/components/schemas/AssignmentSettings"
        is_published:
          title: Published
          description: Whether or not the project is published to annotators
          type: boolean
        overlap_cohort_percentage:
          title: Overlap_cohort_percentage
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        num_tasks_with_annotations:
          title: Num tasks with annotations
          type: string
          readOnly: true
        show_collab_predictions:
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
          type: boolean
        queue_total:
          title: Queue total
          type: string
          readOnly: true
        reviewer_queue_total:
          title: Reviewer queue total
          type: string
          readOnly: true
        queue_left:
          title: Queue left
          type: string
          readOnly: true
        duplication_done:
          title: Duplication done
          type: boolean
          default: false
        queue_done:
          title: Queue done
          type: string
          readOnly: true
        organization:
          title: Organization
          type: integer
          nullable: true
        total_predictions_number:
          title: Total predictions number
          type: integer
          readOnly: true
        rejected:
          title: Rejected
          type: string
          readOnly: true
        allow_stream:
          title: Allow stream
          type: string
          readOnly: true
        control_weights:
          title: Control weights
          description: "Dict of weights for each control tag in metric calculation. Each
            control tag (e.g. label or choice) will have it's own key in control
            weight dict with weight for each label and overall weight.For
            example, if bounding box annotation with control tag named my_bbox
            should be included with 0.33 weight in agreement calculation, and
            the first label Car should be twice more important than Airplaine,
            then you have to need the specify: {'my_bbox': {'type':
            'RectangleLabels', 'labels': {'Car': 1.0, 'Airplaine': 0.5},
            'overall': 0.33}"
          type: object
          nullable: true
        id:
          title: ID
          type: integer
          readOnly: true
        model_version:
          title: Model version
          description: Machine learning model version
          type: string
          nullable: true
        reviewed_number:
          title: Reviewed number
          type: string
          readOnly: true
        sampling:
          title: Sampling
          type: string
          enum:
            - Sequential sampling
            - Uniform sampling
            - Uncertainty sampling
          nullable: true
        ground_truth_number:
          title: Ground truth number
          description: Honeypot annotation number in project
          type: integer
          readOnly: true
        reveal_preannotations_interactively:
          title: Reveal_preannotations_interactively
          description: Reveal pre-annotations interactively
          type: boolean
        show_skip_button:
          title: Show skip button
          description: Show a skip button in interface and allow annotators to skip the task
          type: boolean
        show_annotation_history:
          title: Show annotation history
          description: Show annotation history to annotator
          type: boolean
        skip_queue:
          title: Skip queue
          type: string
          enum:
            - REQUEUE_FOR_ME
            - REQUEUE_FOR_OTHERS
            - IGNORE_SKIPPED
          nullable: true
        finished_task_number:
          title: Finished task number
          description: Finished tasks
          type: integer
          readOnly: true
        ready:
          title: Ready
          type: string
          readOnly: true
        review_total_tasks:
          title: Review total tasks
          type: string
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        custom_script:
          title: Custom script
          type: string
          minLength: 1
        data_types:
          title: Data_types
          type: object
          readOnly: true
          nullable: true
        pinned_at:
          title: Pinned at
          description: Pinned date and time
          type: string
          format: date-time
          nullable: true
        show_instruction:
          title: Show instruction
          description: Show instructions to the annotator before they start
          type: boolean
        start_training_on_annotation_update:
          title: Start training on annotation update
          description: Start model training after any annotations are submitted or updated
          type: string
          readOnly: true
        total_annotations_number:
          title: Total annotations number
          type: string
          readOnly: true
        color:
          title: Color
          type: string
          maxLength: 16
          nullable: true
        maximum_annotations:
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is
            completed (is_labeled=True)
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        title:
          title: Title
          description: Project name. Must be between 3 and 50 characters long.
          type: string
          maxLength: 50
          minLength: 3
          nullable: true
        show_ground_truth_first:
          title: Show ground truth first
          type: boolean
        skipped_annotations_number:
          title: Skipped annotations number
          type: string
          readOnly: true
        is_draft:
          title: Is draft
          description: Whether or not the project is in the middle of being created
          type: boolean
        min_annotations_to_start_training:
          title: Min_annotations_to_start_training
          description: Minimum number of completed tasks after which model training is
            started
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        enable_empty_annotation:
          title: Enable empty annotation
          description: Allow annotators to submit empty annotations
          type: boolean
        evaluate_predictions_automatically:
          title: Evaluate predictions automatically
          description: Retrieve and display predictions when loading a task
          type: boolean
        show_overlap_first:
          title: Show overlap first
          type: boolean
        useful_annotation_number:
          title: Useful annotation number
          type: string
          readOnly: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        expert_instruction:
          title: Expert instruction
          description: Labeling instructions in HTML format
          type: string
          nullable: true
        require_comment_on_skip:
          title: Require comment on skip
          type: boolean
          default: false
        task_number:
          title: Task number
          description: Total task number in project
          type: integer
          readOnly: true
    LseProjectCreate:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          description: Project name. Must be between 3 and 50 characters long.
          type: string
          maxLength: 50
          minLength: 3
          nullable: true
        description:
          title: Description
          description: Project description
          type: string
          nullable: true
        label_config:
          title: Label config
          description: Label config in XML format. See more about it in documentation
          type: string
          nullable: true
        expert_instruction:
          title: Expert instruction
          description: Labeling instructions in HTML format
          type: string
          nullable: true
        show_instruction:
          title: Show instruction
          description: Show instructions to the annotator before they start
          type: boolean
        show_skip_button:
          title: Show skip button
          description: Show a skip button in interface and allow annotators to skip the task
          type: boolean
        enable_empty_annotation:
          title: Enable empty annotation
          description: Allow annotators to submit empty annotations
          type: boolean
        show_annotation_history:
          title: Show annotation history
          description: Show annotation history to annotator
          type: boolean
        organization:
          title: Organization
          type: integer
          nullable: true
        color:
          title: Color
          type: string
          maxLength: 16
          nullable: true
        maximum_annotations:
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is
            completed (is_labeled=True)
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_published:
          title: Published
          description: Whether or not the project is published to annotators
          type: boolean
        model_version:
          title: Model version
          description: Machine learning model version
          type: string
          nullable: true
        is_draft:
          title: Is draft
          description: Whether or not the project is in the middle of being created
          type: boolean
        created_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          title: Min_annotations_to_start_training
          description: Minimum number of completed tasks after which model training is
            started
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        start_training_on_annotation_update:
          title: Start training on annotation update
          description: Start model training after any annotations are submitted or updated
          type: string
          readOnly: true
        show_collab_predictions:
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
          type: boolean
        num_tasks_with_annotations:
          title: Num tasks with annotations
          description: Tasks with annotations count
          type: integer
          readOnly: true
        task_number:
          title: Task number
          description: Total task number in project
          type: integer
          readOnly: true
        useful_annotation_number:
          title: Useful annotation number
          description: Useful annotation number in project not including
            skipped_annotations_number and ground_truth_number. Total
            annotations = annotation_number + skipped_annotations_number +
            ground_truth_number
          type: integer
          readOnly: true
        ground_truth_number:
          title: Ground truth number
          description: Honeypot annotation number in project
          type: integer
          readOnly: true
        skipped_annotations_number:
          title: Skipped annotations number
          description: Skipped by collaborators annotation number in project
          type: integer
          readOnly: true
        total_annotations_number:
          title: Total annotations number
          description: Total annotations number in project including
            skipped_annotations_number and ground_truth_number.
          type: integer
          readOnly: true
        total_predictions_number:
          title: Total predictions number
          description: Total predictions number in project including
            skipped_annotations_number, ground_truth_number, and
            useful_annotation_number.
          type: integer
          readOnly: true
        sampling:
          title: Sampling
          type: string
          enum:
            - Sequential sampling
            - Uniform sampling
            - Uncertainty sampling
          nullable: true
        show_ground_truth_first:
          title: Show ground truth first
          type: boolean
        show_overlap_first:
          title: Show overlap first
          type: boolean
        overlap_cohort_percentage:
          title: Overlap_cohort_percentage
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          title: Task_data_login
          description: "Task data credentials: login"
          type: string
          maxLength: 256
          nullable: true
        task_data_password:
          title: Task_data_password
          description: "Task data credentials: password"
          type: string
          maxLength: 256
          nullable: true
        control_weights:
          title: Control weights
          description: "Dict of weights for each control tag in metric calculation. Each
            control tag (e.g. label or choice) will have it's own key in control
            weight dict with weight for each label and overall weight.For
            example, if bounding box annotation with control tag named my_bbox
            should be included with 0.33 weight in agreement calculation, and
            the first label Car should be twice more important than Airplaine,
            then you have to need the specify: {'my_bbox': {'type':
            'RectangleLabels', 'labels': {'Car': 1.0, 'Airplaine': 0.5},
            'overall': 0.33}"
          type: object
          nullable: true
        parsed_label_config:
          title: Parsed label config
          description: JSON-formatted labeling configuration
          type: object
          readOnly: true
        evaluate_predictions_automatically:
          title: Evaluate predictions automatically
          description: Retrieve and display predictions when loading a task
          type: boolean
        config_has_control_tags:
          title: Config has control tags
          description: Flag to detect is project ready for labeling
          type: string
          readOnly: true
        skip_queue:
          title: Skip queue
          type: string
          enum:
            - REQUEUE_FOR_ME
            - REQUEUE_FOR_OTHERS
            - IGNORE_SKIPPED
          nullable: true
        reveal_preannotations_interactively:
          title: Reveal_preannotations_interactively
          description: Reveal pre-annotations interactively
          type: boolean
        pinned_at:
          title: Pinned at
          description: Pinned date and time
          type: string
          format: date-time
          nullable: true
        finished_task_number:
          title: Finished task number
          description: Finished tasks
          type: integer
          readOnly: true
        queue_total:
          title: Queue total
          type: string
          readOnly: true
        queue_done:
          title: Queue done
          type: string
          readOnly: true
        workspace:
          title: Workspace
          type: integer
    ProjectRole:
      required:
        - role
        - user
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        role:
          title: Role
          description: User role in project
          type: string
          enum:
            - OW
            - AD
            - MA
            - RE
            - AN
            - DI
            - NO
        user:
          title: User
          type: integer
        project:
          title: Project
          type: integer
    ProjectLabelConfig:
      required:
        - label_config
      type: object
      properties:
        label_config:
          title: Label config
          description: Label config in XML format. See more about it in documentation
          type: string
          minLength: 1
    Project:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          description: Project name. Must be between 3 and 50 characters long.
          type: string
          maxLength: 50
          minLength: 3
          nullable: true
        description:
          title: Description
          description: Project description
          type: string
          nullable: true
        label_config:
          title: Label config
          description: Label config in XML format. See more about it in documentation
          type: string
          nullable: true
        expert_instruction:
          title: Expert instruction
          description: Labeling instructions in HTML format
          type: string
          nullable: true
        show_instruction:
          title: Show instruction
          description: Show instructions to the annotator before they start
          type: boolean
        show_skip_button:
          title: Show skip button
          description: Show a skip button in interface and allow annotators to skip the task
          type: boolean
        enable_empty_annotation:
          title: Enable empty annotation
          description: Allow annotators to submit empty annotations
          type: boolean
        show_annotation_history:
          title: Show annotation history
          description: Show annotation history to annotator
          type: boolean
        organization:
          title: Organization
          type: integer
          nullable: true
        color:
          title: Color
          type: string
          maxLength: 16
          nullable: true
        maximum_annotations:
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is
            completed (is_labeled=True)
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_published:
          title: Published
          description: Whether or not the project is published to annotators
          type: boolean
        model_version:
          title: Model version
          description: Machine learning model version
          type: string
          nullable: true
        is_draft:
          title: Is draft
          description: Whether or not the project is in the middle of being created
          type: boolean
        created_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          title: Min_annotations_to_start_training
          description: Minimum number of completed tasks after which model training is
            started
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        start_training_on_annotation_update:
          title: Start training on annotation update
          description: Start model training after any annotations are submitted or updated
          type: string
          readOnly: true
        show_collab_predictions:
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
          type: boolean
        num_tasks_with_annotations:
          title: Num tasks with annotations
          description: Tasks with annotations count
          type: integer
          readOnly: true
        task_number:
          title: Task number
          description: Total task number in project
          type: integer
          readOnly: true
        useful_annotation_number:
          title: Useful annotation number
          description: Useful annotation number in project not including
            skipped_annotations_number and ground_truth_number. Total
            annotations = annotation_number + skipped_annotations_number +
            ground_truth_number
          type: integer
          readOnly: true
        ground_truth_number:
          title: Ground truth number
          description: Honeypot annotation number in project
          type: integer
          readOnly: true
        skipped_annotations_number:
          title: Skipped annotations number
          description: Skipped by collaborators annotation number in project
          type: integer
          readOnly: true
        total_annotations_number:
          title: Total annotations number
          description: Total annotations number in project including
            skipped_annotations_number and ground_truth_number.
          type: integer
          readOnly: true
        total_predictions_number:
          title: Total predictions number
          description: Total predictions number in project including
            skipped_annotations_number, ground_truth_number, and
            useful_annotation_number.
          type: integer
          readOnly: true
        sampling:
          title: Sampling
          type: string
          enum:
            - Sequential sampling
            - Uniform sampling
            - Uncertainty sampling
          nullable: true
        show_ground_truth_first:
          title: Show ground truth first
          type: boolean
        show_overlap_first:
          title: Show overlap first
          type: boolean
        overlap_cohort_percentage:
          title: Overlap_cohort_percentage
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          title: Task_data_login
          description: "Task data credentials: login"
          type: string
          maxLength: 256
          nullable: true
        task_data_password:
          title: Task_data_password
          description: "Task data credentials: password"
          type: string
          maxLength: 256
          nullable: true
        control_weights:
          title: Control weights
          description: "Dict of weights for each control tag in metric calculation. Each
            control tag (e.g. label or choice) will have it's own key in control
            weight dict with weight for each label and overall weight.For
            example, if bounding box annotation with control tag named my_bbox
            should be included with 0.33 weight in agreement calculation, and
            the first label Car should be twice more important than Airplaine,
            then you have to need the specify: {'my_bbox': {'type':
            'RectangleLabels', 'labels': {'Car': 1.0, 'Airplaine': 0.5},
            'overall': 0.33}"
          type: object
          nullable: true
        parsed_label_config:
          title: Parsed label config
          description: JSON-formatted labeling configuration
          type: object
          readOnly: true
        evaluate_predictions_automatically:
          title: Evaluate predictions automatically
          description: Retrieve and display predictions when loading a task
          type: boolean
        config_has_control_tags:
          title: Config has control tags
          description: Flag to detect is project ready for labeling
          type: string
          readOnly: true
        skip_queue:
          title: Skip queue
          type: string
          enum:
            - REQUEUE_FOR_ME
            - REQUEUE_FOR_OTHERS
            - IGNORE_SKIPPED
          nullable: true
        reveal_preannotations_interactively:
          title: Reveal_preannotations_interactively
          description: Reveal pre-annotations interactively
          type: boolean
        pinned_at:
          title: Pinned at
          description: Pinned date and time
          type: string
          format: date-time
          nullable: true
        finished_task_number:
          title: Finished task number
          description: Finished tasks
          type: integer
          readOnly: true
        queue_total:
          title: Queue total
          type: string
          readOnly: true
        queue_done:
          title: Queue done
          type: string
          readOnly: true
    ProjectDuplicate:
      required:
        - mode
        - workspace
        - title
      type: object
      properties:
        mode:
          title: Mode
          description: "Data that you want to duplicate: settings only, with tasks, with
            annotations"
          type: string
          enum:
            - settings
            - settings,data
            - settings,data,annotations
        workspace:
          title: Workspace
          description: Workspace, where to place duplicated project
          type: integer
        title:
          title: Title
          description: Title of duplicated project
          type: string
          maxLength: 50
          minLength: 3
        description:
          title: Description
          description: Description of duplicated project
          type: string
          default: ""
        mark_annotations_as_ground_truth:
          title: Mark annotations as ground truth
          description: Mark annotations as ground truth
          type: boolean
          default: false
    ConvertedFormat:
      required:
        - export_type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        status:
          title: Status
          type: string
          enum:
            - created
            - in_progress
            - failed
            - completed
        export_type:
          title: Export type
          type: string
          maxLength: 64
          minLength: 1
        traceback:
          title: Traceback
          description: Traceback report in case of errors
          type: string
          nullable: true
    Export:
      type: object
      properties:
        title:
          title: Title
          type: string
          maxLength: 2048
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          description: Complete or fail time
          type: string
          format: date-time
          nullable: true
        status:
          title: Export status
          type: string
          enum:
            - created
            - in_progress
            - failed
            - completed
        md5:
          title: Md5 of file
          type: string
          maxLength: 128
          minLength: 1
        counters:
          title: Exporting meta data
          type: object
        converted_formats:
          type: array
          items:
            $ref: "#/components/schemas/ConvertedFormat"
    LseTaskFilterOptions:
      type: object
      properties:
        view:
          title: View
          description: Apply filters from the view ID (a tab from the Data Manager)
          type: integer
        skipped:
          title: Skipped
          description: "`only` - include all tasks with skipped annotations<br>`exclude` -
            exclude all tasks with skipped annotations"
          type: string
          enum:
            - only
            - exclude
            - null
          nullable: true
        finished:
          title: Finished
          description: "`only` - include all finished tasks (is_labeled =
            true)<br>`exclude` - exclude all finished tasks"
          type: string
          enum:
            - only
            - exclude
            - null
          nullable: true
        annotated:
          title: Annotated
          description: "`only` - include all tasks with at least one not skipped
            annotation<br>`exclude` - exclude all tasks with at least one not
            skipped annotation"
          type: string
          enum:
            - only
            - exclude
            - null
          nullable: true
        only_with_annotations:
          title: Only with annotations
          type: boolean
          default: false
        reviewed:
          title: Reviewed
          description: "`only` - include all reviewed tasks<br>`exclude` - exclude all
            reviewed tasks"
          type: string
          enum:
            - only
            - exclude
            - null
          nullable: true
    LseAnnotationFilterOptions:
      type: object
      properties:
        usual:
          title: Usual
          description: Include not skipped and not ground truth annotations
          type: boolean
          default: true
          nullable: true
        ground_truth:
          title: Ground truth
          description: Include ground truth annotations
          type: boolean
          nullable: true
        skipped:
          title: Skipped
          description: Include skipped annotations
          type: boolean
          nullable: true
        reviewed:
          title: Reviewed
          description: "`only` - include all tasks with at least one not reviewed
            annotation<br>`exclude` - exclude with at least one not reviewed
            annotation"
          type: string
          enum:
            - only
            - exclude
            - null
          nullable: true
    SerializationOption:
      description: JSON dict with parameters
      type: object
      properties:
        only_id:
          title: Only id
          description: Include a full json body or IDs only
          type: boolean
          default: false
    SerializationOptions:
      type: object
      properties:
        drafts:
          $ref: "#/components/schemas/SerializationOption"
        predictions:
          $ref: "#/components/schemas/SerializationOption"
        include_annotation_history:
          title: Include annotation history
          description: Include annotation history
          type: boolean
          default: false
        annotations__completed_by:
          $ref: "#/components/schemas/SerializationOption"
        interpolate_key_frames:
          title: Interpolate key frames
          description: Interpolate video key frames
          type: boolean
          default: false
    LseExportCreate:
      type: object
      properties:
        title:
          title: Title
          type: string
          maxLength: 2048
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          description: Complete or fail time
          type: string
          format: date-time
          nullable: true
        status:
          title: Export status
          type: string
          enum:
            - created
            - in_progress
            - failed
            - completed
        md5:
          title: Md5 of file
          type: string
          maxLength: 128
          minLength: 1
        counters:
          title: Exporting meta data
          type: object
        converted_formats:
          type: array
          items:
            $ref: "#/components/schemas/ConvertedFormat"
        task_filter_options:
          $ref: "#/components/schemas/LseTaskFilterOptions"
        annotation_filter_options:
          $ref: "#/components/schemas/LseAnnotationFilterOptions"
        serialization_options:
          $ref: "#/components/schemas/SerializationOptions"
    ExportConvert:
      required:
        - export_type
      type: object
      properties:
        export_type:
          title: Export type
          description: Export file format.
          type: string
          minLength: 1
    ImportApi:
      required:
        - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        agreement:
          title: Agreement
          type: string
          readOnly: true
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/Annotation"
          default: []
        predictions:
          type: array
          items:
            $ref: "#/components/schemas/Prediction"
          default: []
        data:
          title: Data
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data
            for your project on the Import page in the Label Studio Data Manager
            UI.
          type: object
        meta:
          title: Meta
          description: Meta is user imported (uploaded) data and can be useful as input
            for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
          type: object
          nullable: true
        created_at:
          title: Created at
          description: Time a task was created
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last time a task was updated
          type: string
          format: date-time
          readOnly: true
        overlap:
          title: Overlap
          description: Number of distinct annotators that processed the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        inner_id:
          title: Inner id
          description: Internal task ID in the project, starts with 1
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          nullable: true
        total_annotations:
          title: Total_annotations
          description: Number of total annotations for the current task except cancelled
            annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cancelled_annotations:
          title: Cancelled_annotations
          description: Number of total cancelled annotations for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_predictions:
          title: Total_predictions
          description: Number of total predictions for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment_count:
          title: Comment count
          description: Number of comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unresolved_comment_count:
          title: Unresolved comment count
          description: Number of unresolved comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        last_comment_updated_at:
          title: Last comment updated at
          description: When the last comment was updated
          type: string
          format: date-time
          nullable: true
        updated_by:
          title: Updated by
          description: Last annotator or reviewer who updated this task
          type: integer
          nullable: true
        file_upload:
          title: File upload
          description: Uploaded file used as data source for this task
          type: integer
          nullable: true
        comment_authors:
          description: Users who wrote comments
          type: array
          items:
            description: Users who wrote comments
            type: integer
          uniqueItems: true
    ProjectImport:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        preannotated_from_fields:
          title: Preannotated from fields
          type: object
          nullable: true
        commit_to_project:
          title: Commit to project
          type: boolean
        return_task_ids:
          title: Return task ids
          type: boolean
        status:
          title: Status
          type: string
          enum:
            - created
            - in_progress
            - failed
            - completed
        url:
          title: Url
          type: string
          maxLength: 2048
          nullable: true
        traceback:
          title: Traceback
          type: string
          nullable: true
        error:
          title: Error
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Updated time
          type: string
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          description: Complete or fail time
          type: string
          format: date-time
          nullable: true
        task_count:
          title: Task count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        annotation_count:
          title: Annotation count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        prediction_count:
          title: Prediction count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        duration:
          title: Duration
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file_upload_ids:
          title: File upload ids
          type: object
        could_be_tasks_list:
          title: Could be tasks list
          type: boolean
        found_formats:
          title: Found formats
          type: object
        data_columns:
          title: Data columns
          type: object
        tasks:
          title: Tasks
          type: object
          nullable: true
        task_ids:
          title: Task ids
          type: object
        project:
          title: Project
          type: integer
          nullable: true
    ProjectMember:
      required:
        - user
      type: object
      properties:
        user:
          title: User
          type: integer
    LseProjectParams:
      type: object
      properties:
        use_kappa:
          title: Use kappa
          description: If categorical variables are used in labeling (e.g. choices),
            Cohen's Kappa statistic is computed to measure inter-rater
            reliability instead of basic agreement
          type: boolean
        annotator_params:
          title: Annotator params
          description: "user ID and user weight in score calculation. Format
            {user_id[int]: weight[Float[0..1]]}"
          type: object
          nullable: true
    ProjectReimport:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        status:
          title: Status
          type: string
          enum:
            - created
            - in_progress
            - failed
            - completed
        error:
          title: Error
          type: string
          nullable: true
        task_count:
          title: Task count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        annotation_count:
          title: Annotation count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        prediction_count:
          title: Prediction count
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        duration:
          title: Duration
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file_upload_ids:
          title: File upload ids
          type: object
        files_as_tasks_list:
          title: Files as tasks list
          type: boolean
        found_formats:
          title: Found formats
          type: object
        data_columns:
          title: Data columns
          type: object
        traceback:
          title: Traceback
          type: string
          nullable: true
        project:
          title: Project
          type: integer
          nullable: true
    TaskAssignment:
      required:
        - assignee
        - task
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_at:
          title: Created at
          description: Time of assignment
          type: string
          format: date-time
          readOnly: true
        type:
          title: Assignment type
          description: "Type of assignment: Annotate|Review"
          type: string
          enum:
            - AN
            - RE
        assignee:
          title: Assignee
          description: Assigned user
          type: integer
        task:
          title: Task
          description: Assigned task
          type: integer
    SamlSettings:
      type: object
      properties:
        workspaces_groups:
          title: Workspaces_groups
          description: Workspaces to groups mapping
          type: object
          nullable: true
        roles_groups:
          title: Roles_groups
          description: Roles to groups mapping
          type: object
          nullable: true
        projects_groups:
          title: Projects_groups
          description: Projects to groups mapping
          type: object
          nullable: true
    ProjectGroup:
      required:
        - project_id
        - group
        - role
      type: object
      properties:
        project_id:
          title: Project id
          type: integer
        group:
          title: Group
          type: string
          minLength: 1
        role:
          title: Role
          type: string
          enum:
            - Inherit
            - Annotator
            - Reviewer
    SamlSettingsUpdate:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        projects_groups:
          type: array
          items:
            $ref: "#/components/schemas/ProjectGroup"
    ScimSettings:
      type: object
      properties:
        workspaces_groups:
          title: Workspaces_groups
          description: Workspaces to groups mapping
          type: object
          nullable: true
        roles_groups:
          title: Roles_groups
          description: Roles to groups mapping
          type: object
          nullable: true
        projects_groups:
          title: Projects_groups
          description: Projects to groups mapping
          type: object
          nullable: true
    ScimSettingsUpdate:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        projects_groups:
          type: array
          items:
            $ref: "#/components/schemas/ProjectGroup"
    AzureBlobImportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: azure
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        container:
          title: Container
          description: Azure blob container
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: Azure blob prefix name
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        account_name:
          title: Account_name
          description: Azure Blob account name
          type: string
          nullable: true
        account_key:
          title: Account_key
          description: Azure Blob account key
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    AzureBlobExportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: azure
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        container:
          title: Container
          description: Azure blob container
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: Azure blob prefix name
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        account_name:
          title: Account_name
          description: Azure Blob account name
          type: string
          nullable: true
        account_key:
          title: Account_key
          description: Azure Blob account key
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          description: Deletion from storage enabled
          type: boolean
          nullable: true
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    GCSExportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        bucket:
          title: Bucket
          description: GCS bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: GCS bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        google_application_credentials:
          title: Google_application_credentials
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
          type: string
          nullable: true
        google_project_id:
          title: Google Project ID
          description: Google project ID
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          description: Deletion from storage enabled
          type: boolean
          nullable: true
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    RedisExportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: redis
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          description: Storage prefix (optional)
          type: string
          nullable: true
        host:
          title: Host
          description: Server Host IP (optional)
          type: string
          nullable: true
        port:
          title: Port
          description: Server Port (optional)
          type: string
          nullable: true
        password:
          title: Password
          description: Server Password (optional)
          type: string
          nullable: true
        regex_filter:
          title: Port
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          description: Deletion from storage enabled
          type: boolean
          nullable: true
        db:
          title: Db
          description: Server Database
          type: integer
          maximum: 32767
          minimum: 0
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    S3ExportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          description: Deletion from storage enabled
          type: boolean
          nullable: true
        bucket:
          title: Bucket
          description: S3 bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: S3 bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        aws_access_key_id:
          title: Aws_access_key_id
          description: AWS_ACCESS_KEY_ID
          type: string
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          description: AWS_SECRET_ACCESS_KEY
          type: string
          nullable: true
        aws_session_token:
          title: Aws_session_token
          description: AWS_SESSION_TOKEN
          type: string
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          description: AWS SSE KMS Key ID
          type: string
          nullable: true
        region_name:
          title: Region_name
          description: AWS Region
          type: string
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          description: S3 Endpoint
          type: string
          nullable: true
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    LseS3ExportStorage:
      required:
        - role_arn
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3s
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          description: Deletion from storage enabled
          type: boolean
          nullable: true
        bucket:
          title: Bucket
          description: S3 bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: S3 bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        aws_access_key_id:
          title: Aws_access_key_id
          description: AWS_ACCESS_KEY_ID
          type: string
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          description: AWS_SECRET_ACCESS_KEY
          type: string
          nullable: true
        aws_session_token:
          title: Aws_session_token
          description: AWS_SESSION_TOKEN
          type: string
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          description: AWS SSE KMS Key ID
          type: string
          nullable: true
        region_name:
          title: Region_name
          description: AWS Region
          type: string
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          description: S3 Endpoint
          type: string
          nullable: true
        external_id:
          title: ExternalID
          description: AWS ExternalId
          type: string
          nullable: true
        role_arn:
          title: Role ARN
          description: AWS RoleArn
          type: string
          minLength: 1
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    GCSImportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        bucket:
          title: Bucket
          description: GCS bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: GCS bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        google_application_credentials:
          title: Google_application_credentials
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
          type: string
          nullable: true
        google_project_id:
          title: Google Project ID
          description: Google project ID
          type: string
          nullable: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    RedisImportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: redis
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          description: Storage prefix (optional)
          type: string
          nullable: true
        host:
          title: Host
          description: Server Host IP (optional)
          type: string
          nullable: true
        port:
          title: Port
          description: Server Port (optional)
          type: string
          nullable: true
        password:
          title: Password
          description: Server Password (optional)
          type: string
          nullable: true
        regex_filter:
          title: Port
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        db:
          title: Db
          description: Server Database
          type: integer
          maximum: 32767
          minimum: 0
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    S3ImportStorage:
      required:
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        bucket:
          title: Bucket
          description: S3 bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: S3 bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        aws_access_key_id:
          title: Aws_access_key_id
          description: AWS_ACCESS_KEY_ID
          type: string
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          description: AWS_SECRET_ACCESS_KEY
          type: string
          nullable: true
        aws_session_token:
          title: Aws_session_token
          description: AWS_SESSION_TOKEN
          type: string
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          description: AWS SSE KMS Key ID
          type: string
          nullable: true
        region_name:
          title: Region_name
          description: AWS Region
          type: string
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          description: S3 Endpoint
          type: string
          nullable: true
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        recursive_scan:
          title: Recursive scan
          description: Perform recursive scan over the bucket content
          type: boolean
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    LseS3ImportStorage:
      required:
        - role_arn
        - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3s
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        last_sync:
          title: Last sync
          description: Last sync finished time
          type: string
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          description: Count of tasks synced last time
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        last_sync_job:
          title: Last_sync_job
          description: Last sync job ID
          type: string
          maxLength: 256
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - initialized
            - queued
            - in_progress
            - failed
            - completed
        traceback:
          title: Traceback
          description: Traceback report for the last failed sync
          type: string
          nullable: true
        meta:
          title: Meta
          description: Meta and debug information about storage processes
          type: object
          nullable: true
        title:
          title: Title
          description: Cloud storage title
          type: string
          maxLength: 256
          nullable: true
        description:
          title: Description
          description: Cloud storage description
          type: string
          nullable: true
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        bucket:
          title: Bucket
          description: S3 bucket name
          type: string
          nullable: true
        prefix:
          title: Prefix
          description: S3 bucket prefix
          type: string
          nullable: true
        regex_filter:
          title: Regex_filter
          description: Cloud storage regex for filtering objects
          type: string
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          description: Interpret objects as BLOBs and generate URLs
          type: boolean
        aws_access_key_id:
          title: Aws_access_key_id
          description: AWS_ACCESS_KEY_ID
          type: string
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          description: AWS_SECRET_ACCESS_KEY
          type: string
          nullable: true
        aws_session_token:
          title: Aws_session_token
          description: AWS_SESSION_TOKEN
          type: string
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          description: AWS SSE KMS Key ID
          type: string
          nullable: true
        region_name:
          title: Region_name
          description: AWS Region
          type: string
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          description: S3 Endpoint
          type: string
          nullable: true
        external_id:
          title: ExternalID
          description: AWS ExternalId
          type: string
          nullable: true
        role_arn:
          title: Role ARN
          description: AWS RoleArn
          type: string
          minLength: 1
        presign_ttl:
          title: Presign_ttl
          description: Presigned URLs TTL (in minutes)
          type: integer
          maximum: 32767
          minimum: 0
        recursive_scan:
          title: Recursive scan
          description: Perform recursive scan over the bucket content
          type: boolean
        project:
          title: Project
          description: A unique integer value identifying this project.
          type: integer
    LseTask:
      required:
        - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        agreement:
          title: Agreement
          type: string
          readOnly: true
        data:
          title: Data
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data
            for your project on the Import page in the Label Studio Data Manager
            UI.
          type: object
        meta:
          title: Meta
          description: Meta is user imported (uploaded) data and can be useful as input
            for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
          type: object
          nullable: true
        created_at:
          title: Created at
          description: Time a task was created
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last time a task was updated
          type: string
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          description: True if the number of annotations for this task is greater than or
            equal to the number of maximum_completions for the project
          type: boolean
        overlap:
          title: Overlap
          description: Number of distinct annotators that processed the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        inner_id:
          title: Inner id
          description: Internal task ID in the project, starts with 1
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          nullable: true
        total_annotations:
          title: Total_annotations
          description: Number of total annotations for the current task except cancelled
            annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cancelled_annotations:
          title: Cancelled_annotations
          description: Number of total cancelled annotations for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_predictions:
          title: Total_predictions
          description: Number of total predictions for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment_count:
          title: Comment count
          description: Number of comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unresolved_comment_count:
          title: Unresolved comment count
          description: Number of unresolved comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        last_comment_updated_at:
          title: Last comment updated at
          description: When the last comment was updated
          type: string
          format: date-time
          nullable: true
        project:
          title: Project
          description: Project ID for this task
          type: integer
          nullable: true
        updated_by:
          title: Updated by
          description: Last annotator or reviewer who updated this task
          type: integer
          nullable: true
        file_upload:
          title: File upload
          description: Uploaded file used as data source for this task
          type: integer
          nullable: true
        comment_authors:
          description: Users who wrote comments
          type: array
          items:
            description: Users who wrote comments
            type: integer
          uniqueItems: true
    data_manager_task_serializer:
      required:
        - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        agreement:
          title: Agreement
          type: string
          readOnly: true
        predictions:
          title: Predictions
          type: string
          readOnly: true
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/Annotation"
          readOnly: true
          default: []
        drafts:
          title: Drafts
          type: string
          readOnly: true
        annotators:
          title: Annotators
          type: string
          readOnly: true
        inner_id:
          title: Inner id
          type: integer
        cancelled_annotations:
          title: Cancelled annotations
          type: integer
        total_annotations:
          title: Total annotations
          type: integer
        total_predictions:
          title: Total predictions
          type: integer
        completed_at:
          title: Completed at
          type: string
          format: date-time
        annotations_results:
          title: Annotations results
          type: string
          readOnly: true
        predictions_results:
          title: Predictions results
          type: string
          readOnly: true
        predictions_score:
          title: Predictions score
          type: number
        file_upload:
          title: File upload
          type: string
          readOnly: true
        storage_filename:
          title: Storage filename
          type: string
          readOnly: true
        annotations_ids:
          title: Annotations ids
          type: string
          readOnly: true
        predictions_model_versions:
          title: Predictions model versions
          type: string
          readOnly: true
        avg_lead_time:
          title: Avg lead time
          type: number
        draft_exists:
          title: Draft exists
          type: boolean
        updated_by:
          title: Updated by
          type: string
          readOnly: true
        data:
          title: Data
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data
            for your project on the Import page in the Label Studio Data Manager
            UI.
          type: object
        meta:
          title: Meta
          description: Meta is user imported (uploaded) data and can be useful as input
            for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
          type: object
          nullable: true
        created_at:
          title: Created at
          description: Time a task was created
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last time a task was updated
          type: string
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          description: True if the number of annotations for this task is greater than or
            equal to the number of maximum_completions for the project
          type: boolean
        overlap:
          title: Overlap
          description: Number of distinct annotators that processed the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment_count:
          title: Comment count
          description: Number of comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unresolved_comment_count:
          title: Unresolved comment count
          description: Number of unresolved comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        last_comment_updated_at:
          title: Last comment updated at
          description: When the last comment was updated
          type: string
          format: date-time
          nullable: true
        project:
          title: Project
          description: Project ID for this task
          type: integer
          nullable: true
        comment_authors:
          description: Users who wrote comments
          type: array
          items:
            description: Users who wrote comments
            type: integer
          uniqueItems: true
    TaskSimple:
      required:
        - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        data:
          title: Data
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data
            for your project on the Import page in the Label Studio Data Manager
            UI.
          type: object
        meta:
          title: Meta
          description: Meta is user imported (uploaded) data and can be useful as input
            for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
          type: object
          nullable: true
        created_at:
          title: Created at
          description: Time a task was created
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last time a task was updated
          type: string
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          description: True if the number of annotations for this task is greater than or
            equal to the number of maximum_completions for the project
          type: boolean
        overlap:
          title: Overlap
          description: Number of distinct annotators that processed the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        inner_id:
          title: Inner id
          description: Internal task ID in the project, starts with 1
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          nullable: true
        total_annotations:
          title: Total_annotations
          description: Number of total annotations for the current task except cancelled
            annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cancelled_annotations:
          title: Cancelled_annotations
          description: Number of total cancelled annotations for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_predictions:
          title: Total_predictions
          description: Number of total predictions for the current task
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment_count:
          title: Comment count
          description: Number of comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        unresolved_comment_count:
          title: Unresolved comment count
          description: Number of unresolved comments in the task including all annotations
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        last_comment_updated_at:
          title: Last comment updated at
          description: When the last comment was updated
          type: string
          format: date-time
          nullable: true
        project:
          title: Project
          description: Project ID for this task
          type: integer
          nullable: true
        updated_by:
          title: Updated by
          description: Last annotator or reviewer who updated this task
          type: integer
          nullable: true
        file_upload:
          title: File upload
          description: Uploaded file used as data source for this task
          type: integer
          nullable: true
        comment_authors:
          description: Users who wrote comments
          type: array
          items:
            description: Users who wrote comments
            type: integer
          uniqueItems: true
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/Annotation"
          readOnly: true
          default: []
        predictions:
          type: array
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          default: []
    Webhook:
      required:
        - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        organization:
          title: Organization
          type: integer
          readOnly: true
        project:
          title: Project
          type: integer
          nullable: true
        url:
          title: URL of webhook
          description: URL of webhook
          type: string
          format: uri
          maxLength: 2048
          minLength: 1
        send_payload:
          title: Does webhook send the payload
          description: If value is False send only action
          type: boolean
        send_for_all_actions:
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
          type: boolean
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
          type: object
        is_active:
          title: Is webhook active
          description: If value is False the webhook is disabled
          type: boolean
        actions:
          type: array
          items:
            type: string
            enum:
              - PROJECT_CREATED
              - PROJECT_UPDATED
              - PROJECT_DELETED
              - TASKS_CREATED
              - TASKS_DELETED
              - ANNOTATION_CREATED
              - ANNOTATIONS_CREATED
              - ANNOTATION_UPDATED
              - ANNOTATIONS_DELETED
              - LABEL_LINK_CREATED
              - LABEL_LINK_UPDATED
              - LABEL_LINK_DELETED
              - REVIEW_CREATED
              - REVIEW_UPDATED
              - REVIEWS_DELETED
          default: []
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last update time
          type: string
          format: date-time
          readOnly: true
    WebhookSerializerForUpdate:
      required:
        - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        organization:
          title: Organization
          type: integer
          readOnly: true
        project:
          title: Project
          type: integer
          readOnly: true
          nullable: true
        url:
          title: URL of webhook
          description: URL of webhook
          type: string
          format: uri
          maxLength: 2048
          minLength: 1
        send_payload:
          title: Does webhook send the payload
          description: If value is False send only action
          type: boolean
        send_for_all_actions:
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
          type: boolean
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
          type: object
        is_active:
          title: Is webhook active
          description: If value is False the webhook is disabled
          type: boolean
        actions:
          type: array
          items:
            type: string
            enum:
              - PROJECT_CREATED
              - PROJECT_UPDATED
              - PROJECT_DELETED
              - TASKS_CREATED
              - TASKS_DELETED
              - ANNOTATION_CREATED
              - ANNOTATIONS_CREATED
              - ANNOTATION_UPDATED
              - ANNOTATIONS_DELETED
              - LABEL_LINK_CREATED
              - LABEL_LINK_UPDATED
              - LABEL_LINK_DELETED
              - REVIEW_CREATED
              - REVIEW_UPDATED
              - REVIEWS_DELETED
          default: []
        created_at:
          title: Created at
          description: Creation time
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Last update time
          type: string
          format: date-time
          readOnly: true
    Workspace:
      required:
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          description: Workspace name
          type: string
          maxLength: 1000
          minLength: 1
        description:
          title: Description
          description: Workspace description
          type: string
          nullable: true
        color:
          title: Color
          type: string
          maxLength: 16
          nullable: true
        is_personal:
          title: Personal
          description: Workspace is a personal user workspace
          type: boolean
        is_archived:
          title: Archived
          description: Workspace is archived
          type: boolean
        created_by:
          title: Created by
          type: integer
          readOnly: true
    WorkspaceMemberCreate:
      required:
        - user
      type: object
      properties:
        user:
          title: User
          description: User ID
          type: integer
        workspace:
          title: Workspace
          description: Workspace ID
          type: integer
